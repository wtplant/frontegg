"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  ShadowDomContext: true,
  useShadowDom: true,
  useRootState: true
};
exports.useShadowDom = exports.useRootState = exports.ShadowDomContext = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _react = require("react");
var _FronteggStoreContext = require("../FronteggStoreContext");
var _reactRedux = require("react-redux");
var _CustomComponentHolder = require("./CustomComponentHolder");
Object.keys(_CustomComponentHolder).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _CustomComponentHolder[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _CustomComponentHolder[key];
    }
  });
});
const _excluded = ["urlStrategy", "onRedirectTo", "renderByRoute", "customLoader", "customStyles", "contextOptions"];
const ShadowDomContext = /*#__PURE__*/(0, _react.createContext)({});
exports.ShadowDomContext = ShadowDomContext;
const useShadowDom = () => {
  const context = (0, _react.useContext)(ShadowDomContext);
  const {
      urlStrategy = 'path',
      onRedirectTo = urlStrategy === 'path' ? path => window.history.pushState(null, '', path) : path => window.history.pushState(null, '', `#${path}`),
      renderByRoute = false,
      customLoader = false,
      customStyles,
      contextOptions
    } = context,
    rest = (0, _objectWithoutPropertiesLoose2.default)(context, _excluded);
  return (0, _extends2.default)({
    isShadowDom: true,
    onRedirectTo,
    renderByRoute,
    customLoader,
    customStyles,
    urlStrategy,
    contextOptions: (0, _extends2.default)({
      requestCredentials: 'include'
    }, contextOptions)
  }, rest);
};
exports.useShadowDom = useShadowDom;
const useRootState = () => {
  return (0, _FronteggStoreContext.useSelector)(state => state.root, _reactRedux.shallowEqual);
};
exports.useRootState = useRootState;