"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAuditsActions = exports.stateHookGenerator = exports.sliceReducerActionsBy = exports.reducerActionsGenerator = void 0;
exports.useAuditsState = useAuditsState;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = require("react");
var _reduxStore = require("@frontegg/redux-store");
var _reactRedux = require("react-redux");
var _FronteggStoreContext = require("../FronteggStoreContext");
const defaultMapper = {
  state: state => state,
  actions: actions => actions
};
function useAuditsState(stateMapper = defaultMapper.state) {
  return (0, _FronteggStoreContext.useSelector)(state => stateMapper(state[_reduxStore.auditsStoreName]), _reactRedux.shallowEqual);
}
const useAuditsActions = () => {
  const dispatch = (0, _FronteggStoreContext.useDispatch)();
  return (0, _react.useMemo)(() => (0, _reduxStore.bindActionCreators)(_reduxStore.auditsActions, dispatch), [_reduxStore.auditsActions]);
};

/**
 * hooks helpers
 */
exports.useAuditsActions = useAuditsActions;
const sliceReducerActionsBy = reducer => {
  const reducerKeys = Object.keys(reducer);
  const reducerActions = reducerKeys.map(key => ({
    [key]: _reduxStore.auditsActions[key]
  }));
  return reducerActions.reduce((p, n) => (0, _extends2.default)({}, p, n), {});
};
exports.sliceReducerActionsBy = sliceReducerActionsBy;
const stateHookGenerator = (stateMapper, subState) => {
  return (0, _FronteggStoreContext.useSelector)(state => {
    var _stateMapper;
    return (_stateMapper = stateMapper == null ? void 0 : stateMapper(state[_reduxStore.auditsStoreName][subState])) != null ? _stateMapper : state[_reduxStore.auditsStoreName][subState];
  }, _reactRedux.shallowEqual);
};
exports.stateHookGenerator = stateHookGenerator;
const reducerActionsGenerator = (actions, reducers) => {
  const dispatch = (0, _FronteggStoreContext.useDispatch)();
  return (0, _react.useMemo)(() => (0, _reduxStore.bindActionCreators)((0, _extends2.default)({}, actions, sliceReducerActionsBy(reducers)), dispatch), [dispatch]);
};
exports.reducerActionsGenerator = reducerActionsGenerator;