"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FronteggStoreProvider = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _react = _interopRequireWildcard(require("react"));
var _reduxStore = require("@frontegg/redux-store");
var _restApi = require("@frontegg/rest-api");
var _auth = require("../auth");
var _FronteggStoreContext = require("../FronteggStoreContext");
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["authenticatedUrl", "signUpSuccessUrl"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const defaultSetLoading = loading => {
  if (loading) {
    document.body.classList.add('frontegg-loading');
  } else {
    document.body.classList.remove('frontegg-loading');
  }
};
const HideChildrenIfFronteggRoutes = ({
  children,
  basename
}) => {
  const routes = (0, _auth.useAuthRoutes)();
  const uriRef = (0, _react.useRef)(window.location.pathname);
  const animationFrameRef = (0, _react.useRef)(0);
  const [uri, setUri] = (0, _react.useState)(window.location.pathname);
  const checker = (0, _react.useCallback)(() => {
    if (uriRef.current !== window.location.pathname) {
      uriRef.current = window.location.pathname;
      setUri(document.location.pathname);
    }
    animationFrameRef.current = window.requestAnimationFrame(checker);
  }, []);
  (0, _react.useEffect)(() => {
    document.addEventListener('frontegg_onRedirectTo_fired', () => {
      if (uriRef.current !== window.location.pathname) {
        uriRef.current = window.location.pathname;
        setUri(document.location.pathname);
      }
    });
    window.addEventListener('popstate', () => {
      if (uriRef.current !== window.location.pathname) {
        uriRef.current = window.location.pathname;
        setUri(document.location.pathname);
      }
    });
    animationFrameRef.current = window.requestAnimationFrame(checker);
    return () => {
      window.cancelAnimationFrame(animationFrameRef.current);
    };
  }, [checker, setUri]);
  const calculatedBasename = basename ? basename.endsWith('/') ? basename.substring(0, basename.length - 1) : '' : '';
  const checkRoutes = (0, _objectWithoutPropertiesLoose2.default)(routes, _excluded);
  if (Object.values(checkRoutes).map(url => `${calculatedBasename}${url}`).indexOf(uri) !== -1) {
    return null;
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
    children: children
  });
};
const FronteggContent = ({
  children,
  app,
  setLoading
}) => {
  var _app$options, _app$options2;
  const {
    isLoading
  } = (0, _auth.useAuth)(({
    isLoading
  }) => ({
    isLoading
  }));
  const customLoginBox = !app || (app == null ? void 0 : (_app$options = app.options) == null ? void 0 : _app$options.customLoginBox) === true;
  const isNextJS = (app == null ? void 0 : (_app$options2 = app.options) == null ? void 0 : _app$options2.framework) === 'nextjs';
  const alwaysShowChildren = customLoginBox || isNextJS;
  const loadingRef = (0, _react.useRef)(undefined);
  if (isLoading !== loadingRef.current && !isNextJS) {
    loadingRef.current = isLoading;
    setLoading(isLoading);
  }
  if (alwaysShowChildren) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
      children: children
    });
  }
  if (isLoading && !isNextJS) {
    return null;
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(HideChildrenIfFronteggRoutes, {
    basename: app == null ? void 0 : app.options.basename,
    children: children
  });
};
const FronteggStoreProvider = props => {
  var _app$options$contextO, _app$options3, _app$options$previewM, _app$options4, _app$options5, _app$options6;
  const {
    children,
    app,
    contextOptions,
    setLoading = defaultSetLoading,
    alwaysVisibleChildren
  } = props;

  // TODO: make this optionals more readable
  const context = (_app$options$contextO = app == null ? void 0 : (_app$options3 = app.options) == null ? void 0 : _app$options3.contextOptions) != null ? _app$options$contextO : contextOptions;
  if (!context) {
    throw Error('contextOptions must not be null or undefined');
  }
  const previewMode = (_app$options$previewM = app == null ? void 0 : (_app$options4 = app.options) == null ? void 0 : _app$options4.previewMode) != null ? _app$options$previewM : false;
  const authOptions = app != null && (_app$options5 = app.options) != null && _app$options5.authOptions ? (0, _extends2.default)({}, app.options.authOptions, {
    hostedLoginBox: app.options.hostedLoginBox
  }) : {
    hostedLoginBox: app == null ? void 0 : (_app$options6 = app.options) == null ? void 0 : _app$options6.hostedLoginBox
  };
  _restApi.ContextHolder.setContext(context);
  const store = (0, _react.useMemo)(() => {
    var _app$name, _app$options7;
    return (0, _reduxStore.createFronteggStore)({
      context,
      appName: (_app$name = app == null ? void 0 : app.name) != null ? _app$name : 'default'
    }, app, previewMode, authOptions, undefined, false, app == null ? void 0 : (_app$options7 = app.options) == null ? void 0 : _app$options7.urlStrategy);
  }, [app, previewMode]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_FronteggStoreContext.Provider, {
    context: _FronteggStoreContext.FronteggStoreContext,
    store: store,
    children: [alwaysVisibleChildren, /*#__PURE__*/(0, _jsxRuntime.jsx)(FronteggContent, {
      setLoading: setLoading,
      app: app,
      children: children
    })]
  });
};
exports.FronteggStoreProvider = FronteggStoreProvider;