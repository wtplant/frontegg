"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useRestrictionsActions = exports.useIpRestrictions = exports.useEmailDomainRestrictions = void 0;
exports.useRestrictionsState = useRestrictionsState;
var _reduxStore = require("@frontegg/redux-store");
var _react = require("react");
var _hooks = require("../hooks");
const defaultMapper = state => state;
function useRestrictionsState(stateMapper = defaultMapper) {
  return (0, _hooks.stateHookGenerator)(stateMapper, 'restrictionsState');
}
const useRestrictionsActions = () => (0, _hooks.reducerActionsGenerator)(_reduxStore.restrictionsActions, _reduxStore.restrictionsReducers);
exports.useRestrictionsActions = useRestrictionsActions;
const useIpRestrictions = (loadOnMount = false) => {
  const {
    loading,
    data,
    saving,
    error,
    pagination,
    totalPages,
    userIpValid
  } = useRestrictionsState(state => state.ipRestrictions);
  const {
    loadIpRestrictions
  } = useRestrictionsActions();
  (0, _react.useEffect)(() => {
    (loadOnMount || !data) && loadIpRestrictions();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [loadOnMount, loadIpRestrictions]);
  return {
    loading,
    saving,
    error,
    data,
    pagination,
    totalPages,
    userIpValid
  };
};
exports.useIpRestrictions = useIpRestrictions;
const useEmailDomainRestrictions = (loadOnMount = false) => {
  const {
    loading,
    data,
    saving,
    error
  } = useRestrictionsState(state => state.emailDomainRestrictions);
  const {
    loadEmailDomainRestrictions
  } = useRestrictionsActions();
  (0, _react.useEffect)(() => {
    (loadOnMount || !data) && loadEmailDomainRestrictions();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [loadOnMount, loadEmailDomainRestrictions]);
  return {
    loading,
    saving,
    error,
    data
  };
};
exports.useEmailDomainRestrictions = useEmailDomainRestrictions;