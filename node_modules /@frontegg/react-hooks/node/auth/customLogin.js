"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCustomLoginActions = void 0;
exports.useCustomLoginState = useCustomLoginState;
exports.useCustomLoginTheme = void 0;
var _reduxStore = require("@frontegg/redux-store");
var _hooks = require("./hooks");
var _getValue = _interopRequireDefault(require("get-value"));
var _react = require("react");
const defaultMapper = state => state;
function useCustomLoginState(stateMapper = defaultMapper) {
  return (0, _hooks.stateHookGenerator)(stateMapper, 'customLoginState');
}
const useCustomLoginActions = () => (0, _hooks.reducerActionsGenerator)(_reduxStore.customLoginActions, _reduxStore.customLoginReducers);
exports.useCustomLoginActions = useCustomLoginActions;
const themeMapper = state => {
  var _state$tenantMetadata, _state$tenantMetadata2, _state$tenantMetadata3;
  return (_state$tenantMetadata = state.tenantMetadata) == null ? void 0 : (_state$tenantMetadata2 = _state$tenantMetadata.configuration) == null ? void 0 : (_state$tenantMetadata3 = _state$tenantMetadata2.themeV2) == null ? void 0 : _state$tenantMetadata3.loginBox;
};
const useCustomLoginTheme = () => {
  const customLoginTheme = useCustomLoginState(themeMapper);
  const getCustomLoginThemeValue = (0, _react.useCallback)(path => {
    return path && customLoginTheme ? (0, _getValue.default)(customLoginTheme, path) : customLoginTheme;
  }, [customLoginTheme]);
  return {
    customLoginTheme,
    getCustomLoginThemeValue
  };
};
exports.useCustomLoginTheme = useCustomLoginTheme;