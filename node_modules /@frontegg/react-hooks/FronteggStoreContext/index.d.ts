import React, { FC, ReactNode } from 'react';
import { ReactReduxContextValue, ProviderProps } from 'react-redux';
import type { Action, AnyAction } from '@frontegg/redux-store';
export declare const FronteggStoreContext: React.Context<ReactReduxContextValue<any, AnyAction>>;
export declare const useSelector: <Selected extends unknown>(selector: (state: any) => Selected, equalityFn?: ((previous: Selected, next: Selected) => boolean) | undefined) => Selected;
export declare const useDispatch: () => import("redux").Dispatch<AnyAction>;
export declare const useStore: () => import("redux").Store<any, AnyAction>;
export { shallowEqual, Provider as ReactReduxProvider } from 'react-redux';
declare type ProviderWithChildren<A extends Action = AnyAction> = FC<ProviderProps<A> & {
    children?: ReactNode | undefined;
}>;
export declare const Provider: ProviderWithChildren;
export default FronteggStoreContext;
