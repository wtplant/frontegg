import { CaseReducerActions, SliceCaseReducers } from '@frontegg/redux-store';
import { AuditsActions, AuditsState } from '@frontegg/redux-store';
export declare type AuditsMapper = {
    state: (state: AuditsState) => any;
    actions: (actions: AuditsActions) => any;
};
export declare type StateHookFunction<T> = (() => T) & (<S extends object>(mapper: (state: T) => S) => S);
export declare type AuditsStateMapper<S> = (state: AuditsState) => S;
export declare function useAuditsState(): AuditsState;
export declare function useAuditsState<S>(stateMapper: AuditsStateMapper<S>): S;
export declare const useAuditsActions: () => AuditsActions;
/**
 * hooks helpers
 */
export declare const sliceReducerActionsBy: <T extends SliceCaseReducers<any>>(reducer: T) => CaseReducerActions<T>;
export declare const stateHookGenerator: (stateMapper: any, subState: keyof AuditsState) => any;
export declare const reducerActionsGenerator: (actions: any, reducers: SliceCaseReducers<any>) => any;
