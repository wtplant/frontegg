import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
const _excluded = ["urlStrategy", "onRedirectTo", "renderByRoute", "customLoader", "customStyles", "contextOptions"];
import { createContext, useContext } from 'react';
import { useSelector } from '../FronteggStoreContext';
import { shallowEqual } from 'react-redux';
export const ShadowDomContext = /*#__PURE__*/createContext({});
export const useShadowDom = () => {
  const context = useContext(ShadowDomContext);
  const {
      urlStrategy = 'path',
      onRedirectTo = urlStrategy === 'path' ? path => window.history.pushState(null, '', path) : path => window.history.pushState(null, '', `#${path}`),
      renderByRoute = false,
      customLoader = false,
      customStyles,
      contextOptions
    } = context,
    rest = _objectWithoutPropertiesLoose(context, _excluded);
  return _extends({
    isShadowDom: true,
    onRedirectTo,
    renderByRoute,
    customLoader,
    customStyles,
    urlStrategy,
    contextOptions: _extends({
      requestCredentials: 'include'
    }, contextOptions)
  }, rest);
};
export const useRootState = () => {
  return useSelector(state => state.root, shallowEqual);
};
export * from './CustomComponentHolder';