import { customLoginActions, customLoginReducers } from '@frontegg/redux-store';
import { reducerActionsGenerator, stateHookGenerator } from './hooks';
import getValue from 'get-value';
import { useCallback } from 'react';
const defaultMapper = state => state;
export function useCustomLoginState(stateMapper = defaultMapper) {
  return stateHookGenerator(stateMapper, 'customLoginState');
}
export const useCustomLoginActions = () => reducerActionsGenerator(customLoginActions, customLoginReducers);
const themeMapper = state => {
  var _state$tenantMetadata, _state$tenantMetadata2, _state$tenantMetadata3;
  return (_state$tenantMetadata = state.tenantMetadata) == null ? void 0 : (_state$tenantMetadata2 = _state$tenantMetadata.configuration) == null ? void 0 : (_state$tenantMetadata3 = _state$tenantMetadata2.themeV2) == null ? void 0 : _state$tenantMetadata3.loginBox;
};
export const useCustomLoginTheme = () => {
  const customLoginTheme = useCustomLoginState(themeMapper);
  const getCustomLoginThemeValue = useCallback(path => {
    return path && customLoginTheme ? getValue(customLoginTheme, path) : customLoginTheme;
  }, [customLoginTheme]);
  return {
    customLoginTheme,
    getCustomLoginThemeValue
  };
};