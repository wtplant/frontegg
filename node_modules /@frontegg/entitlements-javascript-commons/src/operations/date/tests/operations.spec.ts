import {
  useDateBetweenOperation,
  useDateOnOperation,
  useDateOnOrAfterOperation,
  useDateOnOrBeforeOperation,
} from '../index';
import { fc, test } from '@fast-check/jest';

describe('Date operations', () => {
  test.prop([fc.date(), fc.date()], { verbose: true })(
    'should return correct validity if the dates equal',
    (date, attribute) => {
      const result = useDateOnOperation({ date })(attribute);

      return (date.getTime() === attribute.getTime()) === result.isValid;
    },
  );

  test.prop([fc.date(), fc.date()], { verbose: true })(
    'should return correct validity for on or after validation for given dates',
    (date, attribute) => {
      const result = useDateOnOrAfterOperation({ date })(attribute);

      return attribute.getTime() >= date.getTime() === result.isValid;
    },
  );

  test.prop([fc.date(), fc.date()], { verbose: true })(
    'should return correct validity for on or before validation for given dates',
    (date, attribute) => {
      const result = useDateOnOrBeforeOperation({ date })(attribute);

      return attribute.getTime() <= date.getTime() === result.isValid;
    },
  );

  test.prop([fc.date(), fc.date(), fc.date()], { verbose: true })(
    'should return correct validity for range validation for given dates',
    (start, end, attribute) => {
      const result = useDateBetweenOperation({ start, end })(attribute);

      return (attribute.getTime() >= start.getTime() && attribute.getTime() <= end.getTime()) === result.isValid;
    },
  );
});
