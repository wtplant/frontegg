import { OperationEnum, OperationsMapper } from '../types';
import {
  useBetweenNumericOperation,
  useEqualsOperation,
  useGreaterThanEqualOperation,
  useGreaterThanOperation,
  useLesserThanEqualOperation,
  useLesserThanOperation,
} from './operations';
import { BetweenNumericOperationPayload, SingleNumericOperationPayload } from './types';

export const NumericOperationsMapper: OperationsMapper = {
  [OperationEnum.Equal]: (value) => useEqualsOperation(value as SingleNumericOperationPayload),
  [OperationEnum.GreaterThan]: (value) => useGreaterThanOperation(value as SingleNumericOperationPayload),
  [OperationEnum.GreaterThanEqual]: (value) => useGreaterThanEqualOperation(value as SingleNumericOperationPayload),
  [OperationEnum.LesserThan]: (value) => useLesserThanOperation(value as SingleNumericOperationPayload),
  [OperationEnum.LesserThanEqual]: (value) => useLesserThanEqualOperation(value as SingleNumericOperationPayload),
  [OperationEnum.BetweenNumeric]: (value) => useBetweenNumericOperation(value as BetweenNumericOperationPayload),
};

export * from './operations';
export * from './sanitizers';
export * from './types';
