import { useContainsOperation, useEndsWithOperation, useInListOperation, useStartsWithOperation } from '../index';
import { fc, test } from '@fast-check/jest';

describe('String operations', () => {
  test.prop([fc.array(fc.string()), fc.string()], { verbose: true })(
    'should return correct validity if one of the strings starts with the given prefix',
    (list, prefix) => {
      const result = useStartsWithOperation({ list })(prefix);
      return list.some((value) => prefix.startsWith(value)) === result.isValid;
    },
  );

  test.prop([fc.array(fc.string()), fc.string()], { verbose: true })(
    'should return correct validity if one of the strings ends with the given suffix',
    (list, suffix) => {
      const result = useEndsWithOperation({ list })(suffix);
      return list.some((value) => suffix.endsWith(value)) === result.isValid;
    },
  );

  test.prop([fc.array(fc.string()), fc.string()], { verbose: true })(
    'should return correct validity if one of the strings contains with given attribute',
    (list, included) => {
      const result = useContainsOperation({ list })(included);

      return list.some((value) => included.includes(value)) === result.isValid;
    },
  );

  test.prop([fc.array(fc.string()), fc.string()], { verbose: true })(
    'should return correct validity if one of the strings is in the given list',
    (list, string) => {
      const result = useInListOperation({ list })(string);

      return list.includes(string) === result.isValid;
    },
  );
});
