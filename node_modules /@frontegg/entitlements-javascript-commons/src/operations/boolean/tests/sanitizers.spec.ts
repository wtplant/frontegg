import { fc, test } from '@fast-check/jest';
import { singleBooleanSanitizer } from '../sanitizers';

describe('Boolean sanitizers', () => {
  test.prop([fc.record({ boolean: fc.boolean() })], { verbose: true })(
    'should return sanitized when boolean value exists',
    (value) => {
      const sanitizationResult = singleBooleanSanitizer(value);

      expect(sanitizationResult.isSanitized).toBe(true);
      expect(typeof sanitizationResult.sanitizedValue?.boolean).toBe('boolean');
      expect(sanitizationResult.sanitizedValue?.boolean).toBe(value.boolean);
    },
  );

  test.prop([fc.object()], { verbose: true })('should return undefined when no boolean value exists', (value) => {
    const sanitizationResult = singleBooleanSanitizer(value);

    expect(sanitizationResult.isSanitized).toBe(false);
    expect(sanitizationResult.sanitizedValue).toBeUndefined();
  });
});
