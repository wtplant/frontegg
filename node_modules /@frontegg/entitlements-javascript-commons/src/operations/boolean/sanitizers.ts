import { OperationEnum, RawConditionValue, Sanitizer, SanitizersMapper } from '../types';
import { BooleanOperationPayload } from './types';

const isBoolean = (value: unknown): value is boolean => typeof value === 'boolean';

export const singleBooleanSanitizer: Sanitizer<BooleanOperationPayload> = (value: RawConditionValue) => {
  const sanitizedValue =
    value.boolean !== undefined && isBoolean(value.boolean) ? { boolean: value.boolean } : undefined;

  return {
    isSanitized: !!sanitizedValue,
    sanitizedValue,
  };
};

export const BooleanSanitizersMapper: SanitizersMapper<BooleanOperationPayload> = {
  [OperationEnum.Is]: singleBooleanSanitizer,
};
