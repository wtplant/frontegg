import { Rule, RuleEvaluationResultEnum, createRuleEvaluator } from '../rules';
import { Plan, PlanEvaluationResult } from './types';

export function evaluatePlan(plan: Plan, attributes: Record<string, unknown>): PlanEvaluationResult {
  const treatableRule = findTreatableRule(plan, attributes);
  if (treatableRule) {
    return { treatment: treatableRule.treatment };
  }

  return { treatment: plan.defaultTreatment };
}

function findTreatableRule(plan: Plan, attributes: Record<string, unknown>): Rule | undefined {
  return plan.rules?.find((rule) => {
    const evaluator = createRuleEvaluator({ rule });
    const result = evaluator(attributes);

    return result === RuleEvaluationResultEnum.Treatable;
  });
}
