import { FeatureFlag } from '../feature-flags/types';
import { Plan } from '../plans';
export type UserEntitlementsContext = {
  features: Record<
    string,
    {
      planIds: string[];
      expireTime: number | null;
      linkedPermissions: string[];
      featureFlag?: FeatureFlag;
    }
  >;
  plans: Record<string, Plan>;
  permissions: Permissions;
};

export type EntitlementResult =
  | {
      isEntitled: true;
    }
  | {
      isEntitled: false;
      justification: NotEntitledJustification;
    };

export enum NotEntitledJustification {
  MISSING_FEATURE = 'MISSING_FEATURE',
  MISSING_PERMISSION = 'MISSING_PERMISSION',
  BUNDLE_EXPIRED = 'BUNDLE_EXPIRED',
}

export type CustomAttributes = Record<string, string | number | boolean | Date>;

export type FronteggAttributes = {
  tenantId?: string;
  userId?: string;
  email?: string;
  emailVerified?: boolean;
};
export type Permissions = Record<string, true>;
export type Attributes = { custom?: CustomAttributes; jwt?: JwtAttributes };
export type JwtAttributes = Record<string, unknown>;
export const NO_EXPIRATION_TIME = -1;
