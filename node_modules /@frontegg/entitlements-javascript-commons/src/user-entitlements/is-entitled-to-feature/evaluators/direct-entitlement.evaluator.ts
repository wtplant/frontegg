import {
  Attributes,
  EntitlementResult,
  NO_EXPIRATION_TIME,
  NotEntitledJustification,
  UserEntitlementsContext,
} from '../../types';

export function directEntitlementEvalutor(
  featureKey: string,
  userEntitlementsContext: UserEntitlementsContext,
  attributes: Attributes = {},
): EntitlementResult {
  const feature = userEntitlementsContext.features[featureKey];
  let hasExpired = false;
  if (feature && feature.expireTime !== null) {
    hasExpired = feature.expireTime !== NO_EXPIRATION_TIME && feature.expireTime < Date.now();

    if (!hasExpired) {
      return { isEntitled: true };
    }
  }

  return {
    isEntitled: false,
    justification: hasExpired ? NotEntitledJustification.BUNDLE_EXPIRED : NotEntitledJustification.MISSING_FEATURE,
  };
}
