import { EntitlementResult, NotEntitledJustification } from '../../types';
import { getResult, shouldContinue } from '../entitlement-results.utils';
describe('getResult', () => {
  describe('entitled', () => {
    test('given some of the results are truthy, exected is entitled', async () => {
      const entitlementsResults: EntitlementResult[] = [
        { isEntitled: false, justification: NotEntitledJustification.MISSING_FEATURE },
        { isEntitled: true },
      ];

      const result = getResult(entitlementsResults);

      expect(result).toEqual({ isEntitled: true });
    });
  });
  describe('not-entitled', () => {
    test('given all of results are falsy with missing feature, expected is not entitled with missing feature justification', async () => {
      const entitlementsResults: EntitlementResult[] = [
        { isEntitled: false, justification: NotEntitledJustification.MISSING_FEATURE },
        { isEntitled: false, justification: NotEntitledJustification.MISSING_FEATURE },
      ];

      const result = getResult(entitlementsResults);

      expect(result).toEqual({ isEntitled: false, justification: NotEntitledJustification.MISSING_FEATURE });
    });
    test('given all of results are falsy with some expired, expected is not entitled with expired justification', async () => {
      const entitlementsResults: EntitlementResult[] = [
        { isEntitled: false, justification: NotEntitledJustification.MISSING_FEATURE },
        { isEntitled: false, justification: NotEntitledJustification.BUNDLE_EXPIRED },
      ];

      const result = getResult(entitlementsResults);

      expect(result).toEqual({ isEntitled: false, justification: NotEntitledJustification.BUNDLE_EXPIRED });
    });

    test('given empty results, expected is not entitled with missing feature justification', async () => {
      const entitlementsResults: EntitlementResult[] = [];

      const result = getResult(entitlementsResults);

      expect(result).toEqual({ isEntitled: false, justification: NotEntitledJustification.MISSING_FEATURE });
    });
  });
});
