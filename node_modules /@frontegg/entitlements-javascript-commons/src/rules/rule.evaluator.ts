import { CreateRuleEvaluatorPayload, RuleEvaluationResultEnum, RuleEvaluator } from './types';
import { createConditionEvaluator } from '../conditions';

export function createRuleEvaluator(payload: CreateRuleEvaluatorPayload): RuleEvaluator {
  return (attributes: Record<string, unknown>): RuleEvaluationResultEnum => {
    const isRuleTreatable = payload.rule.conditions.every((condition) => {
      const evaluator = createConditionEvaluator({ condition });

      return evaluator(attributes);
    });

    return isRuleTreatable ? RuleEvaluationResultEnum.Treatable : RuleEvaluationResultEnum.Insufficient;
  };
}
