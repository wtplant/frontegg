import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import { authActions } from '@frontegg/redux-store';
import { AppHolder } from '../AppHolder';
import { ContextHolder } from '@frontegg/rest-api';
export var HostedLogin = /*#__PURE__*/function () {
  function HostedLogin() {
    _classCallCheck(this, HostedLogin);
  }
  _createClass(HostedLogin, null, [{
    key: "setAuthentication",
    value: function setAuthentication(isAuthenticated, accessToken, user) {
      var appName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'default';
      var app = AppHolder.getInstance(appName);
      if (isAuthenticated && accessToken) {
        ContextHolder.setAccessToken(accessToken);
        ContextHolder.setUser(Object.assign({}, user, {
          accessToken: accessToken
        }));
        app.store.dispatch(authActions.setState({
          isLoading: false,
          isAuthenticated: isAuthenticated,
          user: user
        }));
        app.store.dispatch(authActions.loadTenants());
      } else {
        ContextHolder.setAccessToken(null);
        ContextHolder.setUser(null);
        app.store.dispatch(authActions.setState({
          isLoading: false,
          isAuthenticated: false,
          user: null
        }));
      }
    }
  }]);
  return HostedLogin;
}();