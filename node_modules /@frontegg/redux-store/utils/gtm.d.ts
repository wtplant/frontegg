import { ISignUpCompletePayload, IUserVerifiedPayload } from '../auth/interfaces';
/**
 * Available actions
 */
export declare enum GTMEventAction {
    SIGNUP_COMPLETED = "signup_completed",
    USER_VERIFIED = "user_verified"
}
/**
 * Mapping between event action to event payload
 */
interface EventToPayloadMap {
    [GTMEventAction.SIGNUP_COMPLETED]: ISignUpCompletePayload;
    [GTMEventAction.USER_VERIFIED]: IUserVerifiedPayload;
}
declare global {
    interface Window {
        onFronteggEvent: (action: GTMEventAction, payload: EventToPayloadMap[GTMEventAction]) => void;
    }
}
/**
 * Report GTM event by onFronteggEvent
 * onFronteggEvent is coming by the customer GTM tag
 * @param action action (like signup_completed)
 * @param payload
 */
export declare function reportGTMEvent(action: GTMEventAction, payload: EventToPayloadMap[GTMEventAction]): void;
export {};
