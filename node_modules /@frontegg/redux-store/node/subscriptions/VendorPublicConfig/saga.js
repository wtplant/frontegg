"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vendorPublicConfigSagas = vendorPublicConfigSagas;
exports.vendorPublicConfigSagasMock = vendorPublicConfigSagasMock;
var _effects = require("redux-saga/effects");
var _index = require("./index");
var _restApi = require("@frontegg/rest-api");
var _dummy = require("../dummy");
var _utils = require("../../utils");
function* vendorPublicConfigSagas() {
  yield (0, _effects.takeEvery)(_index.vendorPublicConfigActions.loadVendorPublicConfiguration, loadVendorPublicConfiguration);
}
function* loadVendorPublicConfiguration() {
  yield (0, _effects.put)(_index.vendorPublicConfigActions.setLoading(true));
  try {
    const vendorPublicConfig = yield (0, _effects.call)(_restApi.api.subscriptions.getVendorPublicConfigurations);
    yield (0, _effects.put)(_index.vendorPublicConfigActions.setState({
      fetching: false,
      loading: false,
      vendorPublicConfig
    }));
  } catch (e) {
    yield (0, _effects.put)(_index.vendorPublicConfigActions.setError((0, _utils.errorHandler)(e)));
  }
}

/*********************************
 *  Preview Sagas
 *********************************/

function* loadVendorPublicConfigurationMock() {
  yield (0, _effects.put)(_index.vendorPublicConfigActions.setLoading(true));
  yield (0, _effects.delay)(500);
  yield (0, _effects.put)(_index.vendorPublicConfigActions.setState({
    fetching: false,
    loading: false,
    vendorPublicConfig: _dummy.vendorPublicConfigurationResponseMock
  }));
}
function* vendorPublicConfigSagasMock() {
  yield (0, _effects.takeEvery)(_index.vendorPublicConfigActions.loadVendorPublicConfiguration, loadVendorPublicConfigurationMock);
}