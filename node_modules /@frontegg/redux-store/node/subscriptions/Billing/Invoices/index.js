"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.invoicesReducer = exports.invoicesActions = exports.initialInvoicesState = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _utils = require("../../utils");
var _toolkit = require("@reduxjs/toolkit");
var _constants = require("../../../constants");
const initialInvoicesState = {
  loading: false,
  error: null,
  fetching: true,
  invoices: [],
  invoiceDownload: {
    loading: false,
    error: null
  }
};
exports.initialInvoicesState = initialInvoicesState;
const reducers = (0, _extends2.default)({}, (0, _utils.createModuleCaseReducers)(), {
  setInvoiceDownloadState: {
    prepare: payload => ({
      payload
    }),
    reducer: (state, action) => (0, _extends2.default)({}, state, {
      invoiceDownload: (0, _extends2.default)({}, state.invoiceDownload, action.payload)
    })
  }
});
const {
  reducer,
  actions: sliceActions,
  name
} = (0, _toolkit.createSlice)({
  name: `${_constants.subscriptionsStoreName}/billing/invoices`,
  initialState: initialInvoicesState,
  reducers
});
exports.invoicesReducer = reducer;
const actions = (0, _extends2.default)({
  loadInvoices: (0, _toolkit.createAction)(`${name}/loadInvoices`),
  downloadInvoice: (0, _toolkit.createAction)(`${name}/downloadInvoice`, payload => ({
    payload
  }))
}, sliceActions);
exports.invoicesActions = actions;