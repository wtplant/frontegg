"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toApiPaymentProviderType = toApiPaymentProviderType;
exports.toSubscriptionCancellation = toSubscriptionCancellation;
exports.toSubscriptionCancellationPolicy = toSubscriptionCancellationPolicy;
exports.toSubscriptionStatus = toSubscriptionStatus;
var _restApi = require("@frontegg/rest-api");
var _general = require("./general.interfaces");
function toApiPaymentProviderType(paymentProvider) {
  return _restApi.ProviderType.Stripe;
}
function toSubscriptionCancellation({
  policy
}) {
  return {
    policy: toSubscriptionCancellationPolicy(policy)
  };
}
function toSubscriptionCancellationPolicy(policy) {
  return _general.SubscriptionCancellationPolicy.AT_PERIOD_END;
}
function toSubscriptionStatus(status) {
  switch (status) {
    case _restApi.ISubscriptionStatus.ACTIVE:
      return _general.SubscriptionStatus.ACTIVE;
    case _restApi.ISubscriptionStatus.INCOMPLETE:
      return _general.SubscriptionStatus.INCOMPLETE;
    case _restApi.ISubscriptionStatus.CANCELED:
      return _general.SubscriptionStatus.CANCELED;
    case _restApi.ISubscriptionStatus.EXPIRED:
      return _general.SubscriptionStatus.EXPIRED;
    case _restApi.ISubscriptionStatus.TRIALING:
      return _general.SubscriptionStatus.TRIALING;
    default:
      return _general.SubscriptionStatus.EXPIRED;
  }
}