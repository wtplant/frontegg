"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.signUpState = exports.signUpReducers = exports.signUpActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _interfaces = require("./interfaces");
var _constants = require("../../constants");
const signUpState = {
  loading: false,
  allowSignUps: false,
  allowNotVerifiedUsersLogin: false,
  firstLoad: true,
  stage: _interfaces.SignUpStage.SignUp
};
exports.signUpState = signUpState;
const reducers = {
  setSignUpState: (0, _utils.typeReducerForKey)('signUpState'),
  resetSignUpState: (0, _utils.resetStateByKey)('signUpState', {
    signUpState
  })
};
exports.signUpReducers = reducers;
const actions = {
  signUpUser: (0, _toolkit.createAction)(`${_constants.authStoreName}/signUpUser`, payload => ({
    payload
  })),
  resetSignUpStateSoft: (0, _toolkit.createAction)(`${_constants.authStoreName}/resetSignUpStateSoft`)
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.signUpActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};