"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sessionsPolicyState = exports.sessionsPolicyReducers = exports.sessionsPolicyActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../../utils");
var _constants = require("../../../constants");
const sessionsPolicyState = {
  loading: false,
  configurations: {}
};
exports.sessionsPolicyState = sessionsPolicyState;
const reducers = {
  setSessionsPolicyState: (0, _utils.typeReducerForKey)('sessionsPolicyState'),
  resetSessionsPolicyState: (0, _utils.resetStateByKey)('sessionsPolicyState', {
    sessionsPolicyState
  })
};
exports.sessionsPolicyReducers = reducers;
const actions = {
  loadSessionsPolicy: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadSessionsPolicy`),
  createOrUpdateSessionsPolicy: (0, _toolkit.createAction)(`${_constants.authStoreName}/createOrUpdateSessionsPolicy`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.sessionsPolicyActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};