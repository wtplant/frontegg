"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.accountSettingsState = exports.accountSettingsReducers = exports.accountSettingsActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _constants = require("../../constants");
const accountSettingsState = {
  loading: false
};
exports.accountSettingsState = accountSettingsState;
const reducers = {
  setAccountSettingsState: (0, _utils.typeReducerForKey)('accountSettingsState'),
  resetAccountSettingsState: (0, _utils.resetStateByKey)('accountSettingsState', {
    accountSettingsState
  })
};
exports.accountSettingsReducers = reducers;
const actions = {
  loadAccountSettings: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadAccountSettings`, payload => ({
    payload
  })),
  saveAccountSettings: (0, _toolkit.createAction)(`${_constants.authStoreName}/saveAccountSettings`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.accountSettingsActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};