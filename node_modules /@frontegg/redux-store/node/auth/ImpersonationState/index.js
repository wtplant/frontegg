"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.impersonateState = exports.impersonateReducers = exports.impersonateActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _constants = require("../../constants");
var _utils = require("../utils");
var _interfaces = require("./interfaces");
const impersonateState = {
  step: _interfaces.ImpersonateStep.impersonating,
  loading: false
};
exports.impersonateState = impersonateState;
const reducers = {
  setImpersonateState: (0, _utils.typeReducerForKey)('impersonateState'),
  resetImpersonateState: (0, _utils.resetStateByKey)('impersonateState', {
    impersonateState
  })
};
exports.impersonateReducers = reducers;
const actions = {
  impersonate: (0, _toolkit.createAction)(`${_constants.impersonationStoreName}/impersonate`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.impersonateActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};