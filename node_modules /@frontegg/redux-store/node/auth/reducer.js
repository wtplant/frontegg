"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reducer = exports.actions = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("./utils");
var _initialState = require("./initialState");
var _constants = require("../constants");
var _LoginState = require("./LoginState");
var _StepUpState = require("./StepUpState");
var _ActivateState = require("./ActivateState");
var _AcceptInvitationState = require("./AcceptInvitationState");
var _ForgotPasswordState = require("./ForgotPasswordState");
var _SSOState = require("./SSOState");
var _MfaState = require("./MfaState");
var _ProfileState = require("./ProfileState");
var _TeamState = require("./TeamState");
var _SocialLogins = require("./SocialLogins");
var _SignUp = require("./SignUp");
var _ApiTokensState = require("./ApiTokensState");
var _SecurityPolicyState = require("./Security/SecurityPolicyState");
var _AccountSettingsState = require("./AccountSettingsState");
var _TenantsState = require("./TenantsState");
var _RolesState = require("./RolesState");
var _ResetPhoneNumberState = require("./ResetPhoneNumberState");
var _SessionsState = require("./SessionsState");
var _SessionsPolicyState = require("./Security/SessionsPolicyState");
var _RestrictionsState = require("./Security/RestrictionsState");
var _Provisioning = require("./Provisioning");
var _ImpersonationState = require("./ImpersonationState");
var _PasskeysState = require("./PasskeysState");
var _GroupsState = require("./GroupsState");
var _groupsDialogsState = require("./GroupsState/groupsDialogsState");
var _CustomLoginState = require("./CustomLoginState");
var _AllAccountsState = require("./MSP/AllAccountsState");
var _allAccountsDialogsState = require("./MSP/AllAccountsState/allAccountsDialogsState");
var _SecurityCenterState = require("./Security/SecurityCenterState");
var _SmsState = require("./SmsState");
const {
  reducer,
  actions: sliceActions
} = (0, _toolkit.createSlice)({
  name: _constants.authStoreName,
  initialState: _initialState.initialState,
  reducers: (0, _extends2.default)({
    resetState: state => (0, _extends2.default)({}, state, _initialState.reinitializeState),
    setState: (state, {
      payload
    }) => (0, _extends2.default)({}, state, payload),
    setUser: (0, _utils.typeReducer)('user'),
    setEntitlements: (0, _utils.typeReducerNestedKey)('user', 'entitlements')
  }, _LoginState.loginReducers, _StepUpState.stepUpReducers, _SocialLogins.socialLoginsReducer, _ActivateState.activateAccountReducers, _ImpersonationState.impersonateReducers, _AcceptInvitationState.acceptInvitationReducers, _ForgotPasswordState.forgotPasswordReducers, _ResetPhoneNumberState.resetPhoneNumberReducers, _SignUp.signUpReducers, _ProfileState.profileReducers, _CustomLoginState.customLoginReducers, _SSOState.ssoReducers, _MfaState.mfaReducers, _TeamState.teamReducers, _GroupsState.groupsReducers, _groupsDialogsState.groupsDialogsReducers, _ApiTokensState.apiTokensReducers, _SecurityPolicyState.securityPolicyReducers, _AccountSettingsState.accountSettingsReducers, _TenantsState.tenantsReducers, _RolesState.rolesReducers, _SessionsState.sessionsReducers, _SessionsPolicyState.sessionsPolicyReducers, _RestrictionsState.restrictionsReducers, _Provisioning.provisioningReducers, _PasskeysState.passkeysReducers, _AllAccountsState.allAccountsReducers, _allAccountsDialogsState.allAccountsDialogsReducers, _SecurityCenterState.securityCenterReducers, _SmsState.smsReducers)
});
exports.reducer = reducer;
const actions = (0, _extends2.default)({
  loadEntitlements: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadEntitlements`, payload => ({
    payload
  }))
}, sliceActions, _LoginState.loginActions, _StepUpState.stepUpActions, _SocialLogins.socialLoginsActions, _ActivateState.activateAccountActions, _AcceptInvitationState.acceptInvitationActions, _ForgotPasswordState.forgotPasswordActions, _ResetPhoneNumberState.resetPhoneNumberActions, _SignUp.signUpActions, _ProfileState.profileActions, _CustomLoginState.customLoginActions, _SSOState.ssoActions, _MfaState.mfaActions, _TeamState.teamActions, _GroupsState.groupsActions, _groupsDialogsState.groupsDialogsActions, _ApiTokensState.apiTokensActions, _SecurityPolicyState.securityPolicyActions, _AccountSettingsState.accountSettingsActions, _TenantsState.tenantsActions, _RolesState.rolesActions, _SessionsState.sessionsActions, _SessionsPolicyState.sessionsPolicyActions, _RestrictionsState.restrictionsActions, _Provisioning.provisioningActions, _ImpersonationState.impersonateActions, _PasskeysState.passkeysActions, _AllAccountsState.allAccountsActions, _SecurityCenterState.securityCenterActions, _SmsState.smsActions);
exports.actions = actions;