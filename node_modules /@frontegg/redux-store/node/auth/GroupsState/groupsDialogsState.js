"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.groupsDialogsState = exports.groupsDialogsReducers = exports.groupsDialogsActions = void 0;
var _utils = require("../utils");
const groupsDialogsState = {
  addGroupDialogState: {
    loading: false,
    open: false
  },
  editGroupDialogState: {
    loading: false,
    open: false
  },
  deleteGroupDialogState: {
    loading: false,
    open: false
  },
  addMembersToGroupDialogState: {
    loading: false,
    open: false,
    userIds: []
  },
  deleteMemberFromGroupDialogState: {
    loading: false,
    open: false
  }
};
exports.groupsDialogsState = groupsDialogsState;
const reducers = {
  setGroupsDialogsState: (0, _utils.typeReducerForKey)('groupsDialogsState'),
  resetGroupsDialogsState: (0, _utils.resetStateByKey)('groupsState', {
    groupsDialogsState
  }),
  // Add group dialog reducers
  openAddGroupDialog: (0, _utils.dialogStateForKeyWithoutPayload)('groupsDialogsState', 'addGroupDialogState', {
    open: true
  }),
  closeAddGroupDialog: (0, _utils.dialogStateForKeyWithoutPayload)('groupsDialogsState', 'addGroupDialogState', {
    open: false
  }),
  // Edit group dialog reducers
  openEditGroupDialog: (0, _utils.dialogStateForKey)('groupsDialogsState', 'editGroupDialogState', {
    open: true
  }),
  closeEditGroupDialog: (0, _utils.dialogStateForKeyWithoutPayload)('groupsDialogsState', 'editGroupDialogState', {
    open: false,
    loading: false,
    group: undefined
  }),
  // Delete group dialog reducers
  openDeleteGroupDialog: (0, _utils.dialogStateForKey)('groupsDialogsState', 'deleteGroupDialogState', {
    open: true
  }),
  closeDeleteGroupDialog: (0, _utils.dialogStateForKeyWithoutPayload)('groupsDialogsState', 'deleteGroupDialogState', {
    open: false,
    loading: false,
    group: undefined
  }),
  // Add members to group dialog reducers
  openAddMembersToGroupDialog: (0, _utils.dialogStateForKeyWithoutPayload)('groupsDialogsState', 'addMembersToGroupDialogState', {
    open: true
  }),
  closeAddMembersToGroupDialog: (0, _utils.dialogStateForKeyWithoutPayload)('groupsDialogsState', 'addMembersToGroupDialogState', {
    open: false,
    userIds: []
  }),
  // Delete member from group dialog reducers
  openDeleteMemberFromGroupDialog: (0, _utils.dialogStateForKey)('groupsDialogsState', 'deleteMemberFromGroupDialogState', {
    open: true
  }),
  closeDeleteMemberFromGroupDialog: (0, _utils.dialogStateForKeyWithoutPayload)('groupsDialogsState', 'deleteMemberFromGroupDialogState', {
    open: false,
    userId: undefined
  })
};
exports.groupsDialogsReducers = reducers;
const actions = {};
exports.groupsDialogsActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};