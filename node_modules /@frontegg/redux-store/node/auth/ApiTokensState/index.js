"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.apiTokensState = exports.apiTokensReducers = exports.apiTokensActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _constants = require("../../constants");
const apiTokensState = {
  apiTokenType: null,
  searchValue: '',
  showAddTokenDialog: false,
  createdByUserIdColumn: 'show',
  deleteTokenDialog: {
    open: false,
    clientId: ''
  },
  successDialog: {
    open: false,
    secret: '',
    clientId: ''
  },
  loaders: {},
  apiTokensDataTenant: [],
  apiTokensDataUser: [],
  roles: [],
  permissions: [],
  errors: {}
};
exports.apiTokensState = apiTokensState;
const reducers = {
  setApiTokensLoader: (0, _utils.loadersReducerForKey)('apiTokensState'),
  setApiTokensError: (0, _utils.errorsReducerForKey)('apiTokensState'),
  setApiTokensState: (0, _utils.typeReducerForKey)('apiTokensState'),
  resetApiTokensState: (0, _utils.resetStateByKey)('apiTokensState', {
    apiTokensState
  })
};
exports.apiTokensReducers = reducers;
const actions = {
  loadApiTokens: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadApiTokens`, payload => ({
    payload
  })),
  loadUserApiTokens: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadUserApiTokens`, payload => ({
    payload
  })),
  loadTenantApiTokens: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadTenantApiTokens`, payload => ({
    payload
  })),
  initApiTokensData: (0, _toolkit.createAction)(`${_constants.authStoreName}/initApiTokensData`, payload => ({
    payload
  })),
  addTenantApiToken: (0, _toolkit.createAction)(`${_constants.authStoreName}/addTenantApiToken`, payload => ({
    payload
  })),
  addUserApiToken: (0, _toolkit.createAction)(`${_constants.authStoreName}/addUserApiToken`, payload => ({
    payload
  })),
  deleteUserApiToken: (0, _toolkit.createAction)(`${_constants.authStoreName}/deleteUserApiToken`, payload => ({
    payload
  })),
  deleteTenantApiToken: (0, _toolkit.createAction)(`${_constants.authStoreName}/deleteTenantApiToken`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.apiTokensActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};