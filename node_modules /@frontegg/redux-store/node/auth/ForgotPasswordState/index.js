"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.forgotPasswordState = exports.forgotPasswordReducers = exports.forgotPasswordActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _interfaces = require("./interfaces");
var _constants = require("../../constants");
const forgotPasswordState = {
  step: _interfaces.ForgotPasswordStep.forgotPassword,
  loading: false,
  email: '',
  passwordConfig: null
};
exports.forgotPasswordState = forgotPasswordState;
const reducers = {
  setForgotPasswordState: (0, _utils.typeReducerForKey)('forgotPasswordState'),
  resetForgotPasswordState: (0, _utils.resetStateByKey)('forgotPasswordState', {
    forgotPasswordState
  })
};
exports.forgotPasswordReducers = reducers;
const actions = {
  forgotPassword: (0, _toolkit.createAction)(`${_constants.authStoreName}/forgotPassword`, payload => ({
    payload
  })),
  resetPassword: (0, _toolkit.createAction)(`${_constants.authStoreName}/resetPassword`, payload => ({
    payload
  })),
  loadPasswordConfig: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadPasswordConfig`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.forgotPasswordActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};