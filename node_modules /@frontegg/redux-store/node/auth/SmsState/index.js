"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.smsState = exports.smsReducers = exports.smsActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _constants = require("../../constants");
var _utils = require("../utils");
const smsState = {
  loading: false,
  error: null,
  phoneNumbers: undefined
};
exports.smsState = smsState;
const reducers = {
  setSmsState: (0, _utils.typeReducerForKey)('smsState'),
  resetSmsState: (0, _utils.resetStateByKey)('smsState', {
    smsState
  })
};
exports.smsReducers = reducers;
const actions = {
  loadPhoneNumbers: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadPhoneNumbers`),
  setUpPhoneNumber: (0, _toolkit.createAction)(`${_constants.authStoreName}/setUpPhoneNumber`, payload => ({
    payload
  })),
  verifyPhoneNumber: (0, _toolkit.createAction)(`${_constants.authStoreName}/verifyPhoneNumber`, payload => ({
    payload
  })),
  deletePhoneNumber: (0, _toolkit.createAction)(`${_constants.authStoreName}/deletePhoneNumber`, payload => ({
    payload
  })),
  verifyDeletePhoneNumber: (0, _toolkit.createAction)(`${_constants.authStoreName}/verifyDeletePhoneNumber`, payload => ({
    payload
  })),
  preVerifyPhoneNumber: (0, _toolkit.createAction)(`${_constants.authStoreName}/preVerifyPhoneNumber`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.smsActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};