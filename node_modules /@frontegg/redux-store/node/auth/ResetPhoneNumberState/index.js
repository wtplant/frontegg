"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetPhoneNumberState = exports.resetPhoneNumberReducers = exports.resetPhoneNumberActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _interfaces = require("./interfaces");
var _constants = require("../../constants");
const resetPhoneNumberState = {
  step: _interfaces.ResetPhoneNumberStep.ResetPhoneNumber,
  loading: false
};
exports.resetPhoneNumberState = resetPhoneNumberState;
const reducers = {
  setResetPhoneNumberState: (0, _utils.typeReducerForKey)('resetPhoneNumberState'),
  resetResetPhoneNumberState: (0, _utils.resetStateByKey)('resetPhoneNumberState', {
    resetPhoneNumberState
  })
};
exports.resetPhoneNumberReducers = reducers;
const actions = {
  resetPhoneNumber: (0, _toolkit.createAction)(`${_constants.authStoreName}/resetPhoneNumber`, payload => ({
    payload
  })),
  verifyResetPhoneNumber: (0, _toolkit.createAction)(`${_constants.authStoreName}/verifyResetPhoneNumber`, payload => ({
    payload
  })),
  changePhoneNumber: (0, _toolkit.createAction)(`${_constants.authStoreName}/changePhoneNumber`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.resetPhoneNumberActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};