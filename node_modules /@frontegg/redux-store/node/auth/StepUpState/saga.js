"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.preVerifyMFAEmailCodeForStepUp = preVerifyMFAEmailCodeForStepUp;
exports.preVerifyMFASMSForStepUp = preVerifyMFASMSForStepUp;
exports.preVerifyMFAWebAuthnForStepUp = preVerifyMFAWebAuthnForStepUp;
exports.stepUpSagas = stepUpSagas;
exports.stepUpWithAuthenticator = stepUpWithAuthenticator;
exports.verifyMFAEmailCodeForStepUp = verifyMFAEmailCodeForStepUp;
exports.verifyMFASMSForStepUp = verifyMFASMSForStepUp;
exports.verifyMFAWebAuthnForStepUp = verifyMFAWebAuthnForStepUp;
var _effects = require("redux-saga/effects");
var _reducer = require("../reducer");
var _saga = require("../LoginState/saga");
var _mfaWithSMS = require("../LoginState/sagas/mfaWithSMS.saga");
var _mfaWithWebAuthn = require("../LoginState/sagas/mfaWithWebAuthn.saga");
var _mfaWithEmailCode = require("../LoginState/sagas/mfaWithEmailCode.saga");
var _generateStepUpSession = require("./generateStepUpSession.saga");
var _stepUpHostedLogin = require("./stepUpHostedLogin.saga");
/**
 * Step up with authenticator app
 * @param payload.callback - callback function to be called after the verification is done
 * @param payload.mfaToken
 * @param payload.value - 6 digits code input by the user
 */
function* stepUpWithAuthenticator({
  payload
}) {
  yield (0, _saga.mfaWithAuthenticator)(payload, _reducer.actions.setStepUpState, true);
}

/**
 * Pre verify step for MFA Webauthn step up
 * @param payload.callback - callback function to be called after the verification is done
 * @param payload.deviceId
 * @param payload.mfaToken
 */
function* preVerifyMFAWebAuthnForStepUp({
  payload
}) {
  yield (0, _mfaWithWebAuthn.preVerifyMFAWebAuthn)(payload, _reducer.actions.setStepUpState);
}

/**
 * Verify step for MFA Webauthn step up
 * @param payload.callback - callback function to be called after the verification is done with true for success, o.w false
 * @param payload.deviceId
 * @param payload.webauthnToken
 * @param payload.mfaToken
 * @param payload.publicKey - public key object from browser navigator credentials
 * @param payload.code - 6 digits code input by the user
 */
function* verifyMFAWebAuthnForStepUp({
  payload
}) {
  yield (0, _mfaWithWebAuthn.verifyMFAWebAuthn)(payload, _reducer.actions.setStepUpState, true);
}

/**
 * Pre verify step for MFA SMS step up
 * @param payload.callback - callback function to be called after the verification is done with true for success, o.w false
 * @param payload.deviceId
 * @param payload.mfaToken
 */
function* preVerifyMFASMSForStepUp({
  payload
}) {
  yield (0, _mfaWithSMS.preVerifyMFASMS)(payload, _reducer.actions.setStepUpState);
}

/**
 * Verify step for MFA SMS step up
 * @param payload.callback - callback function to be called after the verification is done with true for success, o.w false
 * @param payload.deviceId
 * @param payload.otcToken
 * @param payload.code - 6 digits code input by the user
 */
function* verifyMFASMSForStepUp({
  payload
}) {
  yield (0, _mfaWithSMS.verifyMFASMS)(payload, _reducer.actions.setStepUpState, true);
}

/**
 * Verify step for MFA Email code step up
 * @param payload.callback - callback function to be called after the verification is done with true for success, o.w false
 * @param payload.otcToken
 * @param payload.code - 6 digits code input by the user
 */
function* verifyMFAEmailCodeForStepUp({
  payload
}) {
  yield (0, _mfaWithEmailCode.verifyMFAEmailCode)(payload, _reducer.actions.setStepUpState);
}

/**
 * Pre verify step for MFA Email code step up
 * @param payload.callback - callback function to be called after the verification is done with true for success, o.w false
 * @param payload.mfaToken
 */
function* preVerifyMFAEmailCodeForStepUp({
  payload
}) {
  yield (0, _mfaWithEmailCode.preVerifyMFAEmailCode)(payload, _reducer.actions.setStepUpState);
}
function* stepUpSagas() {
  yield (0, _effects.takeLeading)(_reducer.actions.stepUpHostedLogin, _stepUpHostedLogin.stepUpHostedLogin);
  yield (0, _effects.takeLeading)(_reducer.actions.generateStepUpSession, _generateStepUpSession.generateStepUpSession);
  yield (0, _effects.takeLeading)(_reducer.actions.stepUpWithAuthenticator, stepUpWithAuthenticator);
  yield (0, _effects.takeLeading)(_reducer.actions.preVerifyMFASMSForStepUp, preVerifyMFASMSForStepUp);
  yield (0, _effects.takeLeading)(_reducer.actions.verifyMFASMSForStepUp, verifyMFASMSForStepUp);
  yield (0, _effects.takeLeading)(_reducer.actions.preVerifyMFAWebAuthnForStepUp, preVerifyMFAWebAuthnForStepUp);
  yield (0, _effects.takeLeading)(_reducer.actions.verifyMFAWebAuthnForStepUp, verifyMFAWebAuthnForStepUp);
  yield (0, _effects.takeLeading)(_reducer.actions.verifyMFAEmailCodeForStepUp, verifyMFAEmailCodeForStepUp);
  yield (0, _effects.takeLeading)(_reducer.actions.preVerifyMFAEmailCodeForStepUp, preVerifyMFAEmailCodeForStepUp);
}