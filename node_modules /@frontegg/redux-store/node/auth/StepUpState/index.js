"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  stepUpState: true,
  stepUpReducers: true,
  stepUpActions: true,
  STEP_UP_MAX_AGE_PARAM_NAME: true,
  SHOULD_STEP_UP_KEY: true
};
Object.defineProperty(exports, "SHOULD_STEP_UP_KEY", {
  enumerable: true,
  get: function () {
    return _consts.SHOULD_STEP_UP_KEY;
  }
});
Object.defineProperty(exports, "STEP_UP_MAX_AGE_PARAM_NAME", {
  enumerable: true,
  get: function () {
    return _consts.STEP_UP_MAX_AGE_PARAM_NAME;
  }
});
exports.stepUpState = exports.stepUpReducers = exports.stepUpActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _constants = require("../../constants");
var _utils2 = require("./utils");
Object.keys(_utils2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _utils2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _utils2[key];
    }
  });
});
var _consts = require("./consts");
const stepUpState = {
  loading: false,
  mfaDevices: undefined,
  mfaToken: ''
};
exports.stepUpState = stepUpState;
const reducers = {
  setStepUpState: (0, _utils.typeReducerForKey)('stepUpState'),
  resetStepUpState: (0, _utils.resetStateByKey)('stepUpState', {
    stepUpState
  })
};
exports.stepUpReducers = reducers;
const actions = {
  stepUpHostedLogin: (0, _toolkit.createAction)(`${_constants.authStoreName}/stepUpHostedLogin`, payload => ({
    payload
  })),
  generateStepUpSession: (0, _toolkit.createAction)(`${_constants.authStoreName}/generateStepUpSession`, payload => ({
    payload
  })),
  stepUpWithAuthenticator: (0, _toolkit.createAction)(`${_constants.authStoreName}/stepUpWithAuthenticator`, payload => ({
    payload
  })),
  preVerifyMFASMSForStepUp: (0, _toolkit.createAction)(`${_constants.authStoreName}/preVerifyMFASMSForStepUp`, payload => ({
    payload
  })),
  verifyMFASMSForStepUp: (0, _toolkit.createAction)(`${_constants.authStoreName}/verifyMFASMSForStepUp`, payload => ({
    payload
  })),
  preVerifyMFAWebAuthnForStepUp: (0, _toolkit.createAction)(`${_constants.authStoreName}/preVerifyMFAWebAuthnForStepUp`, payload => ({
    payload
  })),
  verifyMFAWebAuthnForStepUp: (0, _toolkit.createAction)(`${_constants.authStoreName}/verifyMFAWebAuthnForStepUp`, payload => ({
    payload
  })),
  preVerifyMFAEmailCodeForStepUp: (0, _toolkit.createAction)(`${_constants.authStoreName}/preVerifyMFAEmailCodeForStepUp`, payload => ({
    payload
  })),
  verifyMFAEmailCodeForStepUp: (0, _toolkit.createAction)(`${_constants.authStoreName}/verifyMFAEmailCodeForStepUp`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.stepUpActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};