"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acceptInvitationState = exports.acceptInvitationReducers = exports.acceptInvitationActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _interfaces = require("./interfaces");
var _constants = require("../../constants");
const acceptInvitationState = {
  step: _interfaces.AcceptInvitationStep.validate
};
exports.acceptInvitationState = acceptInvitationState;
const reducers = {
  setAcceptInvitationState: (0, _utils.typeReducerForKey)('acceptInvitationState'),
  resetAcceptInvitationState: (0, _utils.resetStateByKey)('acceptInvitationState', {
    acceptInvitationState
  })
};
exports.acceptInvitationReducers = reducers;
const actions = {
  acceptInvitation: (0, _toolkit.createAction)(`${_constants.authStoreName}/acceptInvitation`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.acceptInvitationActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};