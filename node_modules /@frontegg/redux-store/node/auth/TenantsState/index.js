"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tenantsState = exports.tenantsReducers = exports.tenantsActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _constants = require("../../constants");
const tenantsState = {
  tenants: [],
  subTenants: [],
  loading: true,
  tenantTree: null
};
exports.tenantsState = tenantsState;
const reducers = {
  setTenantsState: (0, _utils.typeReducerForKey)('tenantsState'),
  resetTenantsState: (0, _utils.resetStateByKey)('tenantsState', {
    tenantsState
  })
};
exports.tenantsReducers = reducers;
const actions = {
  switchTenant: (0, _toolkit.createAction)(`${_constants.authStoreName}/switchTenant`, payload => ({
    payload
  })),
  loadTenants: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadTenants`, payload => ({
    payload
  })),
  loadSubTenants: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadSubTenants`, payload => ({
    payload
  })),
  loadSubTenantsTree: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadSubTenantsTree`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.tenantsActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};