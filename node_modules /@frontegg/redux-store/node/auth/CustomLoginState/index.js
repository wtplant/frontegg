"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.customLoginState = exports.customLoginReducers = exports.customLoginActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _constants = require("../../constants");
const customLoginState = {
  loading: true,
  error: null
};
exports.customLoginState = customLoginState;
const reducers = {
  setCustomLoginState: (0, _utils.typeReducerForKey)('customLoginState'),
  resetCustomLoginState: (0, _utils.resetStateByKey)('customLoginState', {
    customLoginState
  })
};
exports.customLoginReducers = reducers;
const actions = {
  loadTenantMetadata: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadTenantMetadata`),
  updateTenantMetadata: (0, _toolkit.createAction)(`${_constants.authStoreName}/updateTenantMetadata`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.customLoginActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};