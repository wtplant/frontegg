import { WithCallback } from '../../../interfaces';
import { ISubscriptionUpdatePaymentMethodBillingDetails } from '@frontegg/rest-api';
export declare type PaymentMethod = {
    id: string;
    type: 'card';
    externalId?: string;
    isDefault?: boolean;
    last4?: string;
    expMonth?: number;
    expYear?: number;
    brand?: string;
    billingDetails?: BillingDetailsResponse;
};
export interface PaymentMethodState {
    loading: boolean;
    error: string | null;
    fetching: boolean;
    paymentMethod?: PaymentMethod;
}
export interface PaymentMethodActions {
    loadPaymentMethod: () => void;
    updatePaymentMethodBillingDetails: (payload: WithCallback<ISubscriptionUpdatePaymentMethodBillingDetails & {
        id: string;
    }>) => void;
    setError: (error: string | null) => void;
    submitPaymentMethod: () => void;
    submitPaymentMethodError: (error: string) => void;
    submitPaymentMethodSuccess: () => void;
}
export interface BillingDetailsResponse {
    name?: string;
    email?: string;
    address?: AddressResponse;
}
export interface AddressResponse {
    addressLine1?: string;
    addressLine2?: string;
    city?: string;
    state?: string;
    postalCode?: string;
    country?: string;
}
export declare enum PaymentMethodType {
    UNKNWON = "unknown",
    CARD = "card"
}
