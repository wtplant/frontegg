import { DownloadInvoiceActionPayload, InvoicesState } from './interfaces';
export declare const initialInvoicesState: InvoicesState;
declare const reducer: import("redux").Reducer<InvoicesState, import("redux").AnyAction>;
declare const actions: {
    setInvoiceDownloadState: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[{
        loading: boolean;
        error: string | null;
    }], {
        loading: boolean;
        error: string | null;
    }, string, never, never>;
    setLoading: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[boolean], boolean, string, never, never>;
    setError: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[string | null], string | null, string, never, never>;
    setState: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[Partial<InvoicesState>], Partial<InvoicesState>, string, never, never>;
    loadInvoices: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<string>;
    downloadInvoice: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[DownloadInvoiceActionPayload], DownloadInvoiceActionPayload, string, never, never>;
};
export { reducer as invoicesReducer, actions as invoicesActions };
