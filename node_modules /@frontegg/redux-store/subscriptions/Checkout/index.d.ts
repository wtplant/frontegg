import { CheckoutState, ConfirmCheckoutActionPayload } from './interfaces';
export declare const checkoutInitialState: CheckoutState;
declare const reducer: import("redux").Reducer<CheckoutState, import("redux").AnyAction>;
declare const actions: {
    setLoading: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[boolean], boolean, string, never, never>;
    setError: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[string | null], string | null, string, never, never>;
    setState: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[Partial<CheckoutState>], Partial<CheckoutState>, string, never, never>;
    loadCheckout: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<string>;
    resetCheckout: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<string>;
    submitCheckout: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<string>;
    confirmCheckout: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[ConfirmCheckoutActionPayload], ConfirmCheckoutActionPayload, string, never, never>;
    errorCheckout: import("@reduxjs/toolkit").ActionCreatorWithPreparedPayload<[string], string, string, never, never>;
};
export { reducer as checkoutReducer, actions as checkoutActions };
