import { IEnrollMFASMS, IEnrollMFAWebAuthn, IPreEnrollMFASMS, MFAStrategyEnum, UserMFADevicesResponse } from '@frontegg/rest-api';
import { WithCallback } from '../../interfaces';
import { IVerifyMFAWebAuthnPayload } from '../LoginState/interfaces';
export declare enum MFAStep {
    'verify' = "verify",
    'recoveryCode' = "recoveryCode",
    'authenticatorApp' = "authenticatorApp",
    'smsSetPhoneNumber' = "smsSetPhoneNumber",
    'smsVerifyCode' = "smsVerifyCode",
    'emailVerifyCode' = "emailVerifyCode",
    'noMFAEnrolledStepUp' = "noMFAEnrolledStepUp"
}
export interface MFAState {
    step: MFAStep;
    loading: boolean;
    saving: boolean;
    error?: any;
    recoveryCode?: string;
    qrCode?: string | null;
    mfaToken?: string;
    otcToken?: string;
    phoneNumber?: string;
    mfaStrategies?: MFAStrategyEnum[];
    mfaDevices?: UserMFADevicesResponse;
}
export declare type IUserPreEnrollMFASMSPayload = WithCallback<Omit<IPreEnrollMFASMS, 'mfaToken' | 'rememberDevice'>>;
export declare type IUserEnrollMFASMSPayload = WithCallback<Omit<IEnrollMFASMS, 'mfaToken' | 'rememberDevice'>, string | undefined>;
export declare type IUserEnrollMFAWebAuthnPayload = WithCallback<Omit<IEnrollMFAWebAuthn, 'options' | 'mfaToken' | 'rememberDevice'>, string | undefined> & {
    publicKey: Credential;
};
export declare type IDisableMFAWebAuthnPayload = WithCallback<Omit<IVerifyMFAWebAuthnPayload, 'options' | 'mfaToken' | 'rememberDevice'>> & {
    publicKey: Credential;
};
