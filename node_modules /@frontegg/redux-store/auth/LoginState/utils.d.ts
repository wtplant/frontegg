import { IEmailPasswordlessPreLogin, ILoginResponse, IPasswordlessPreLogin, MFAStrategyEnum, UserMFADevicesResponse } from '@frontegg/rest-api';
import { MFAStep } from '../MfaState/interfaces';
export declare const isAbsoluteUrl: (path: string) => boolean;
export declare const getRedirectUrl: ({ authenticatedUrl, enforceRedirectToSameSite, allowedRedirectOrigins, includeQueryParam, }: {
    authenticatedUrl: string;
    enforceRedirectToSameSite: boolean;
    allowedRedirectOrigins: string[];
    includeQueryParam: boolean;
}) => string;
export declare const getSearchParamsFromUrl: (url: string) => string | undefined;
export declare const getPathAndSearchParamsFromUrl: (url: string) => string;
/**
 *
 * @param key
 * @returns the value of the param as string or undefined if it does not exist
 */
export declare const getSearchParam: (key: string) => string | undefined;
export declare const TENANT_ID_PARAM_KEY = "tenantId";
export declare const isMfaRequired: (user: ILoginResponse) => boolean;
export declare const getNumberOfMfaDevices: (mfaDevices: UserMFADevicesResponse) => {
    numberOfWebAuthnDevices: number;
    numberOfPhoneDevices: number;
    numberOfAuthenticators: number;
    numberOfEmails: number;
    totalDevices: number;
};
export declare const getMfaStepForEnrolledUsers: (mfaDevices: UserMFADevicesResponse) => MFAStep.verify | MFAStep.authenticatorApp | MFAStep.smsVerifyCode | MFAStep.emailVerifyCode;
export declare const getMfaStepForNotEnrolledUsers: (mfaStrategies: MFAStrategyEnum[]) => MFAStep.verify | MFAStep.authenticatorApp | MFAStep.smsSetPhoneNumber | MFAStep.emailVerifyCode;
export declare const isOauthCallbackRoute: (activeUri: string) => boolean;
export declare function isEmailPayload(payload: IPasswordlessPreLogin): payload is IEmailPasswordlessPreLogin;
