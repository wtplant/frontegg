import { LoginStep, QuickLoginStrategy, LoginFlow } from '../interfaces';
import { MFAState } from '../../MfaState/interfaces';
import { AuthState } from '../../interfaces';
export declare function getMfaRequiredState(user: any): Generator<import("redux-saga/effects").SelectEffect | import("redux-saga/effects").CallEffect<import("@frontegg/rest-api").IAllowedToRememberMfaDevice>, {
    user: undefined;
    isAuthenticated: boolean;
    mfaState: Partial<MFAState>;
    loginState: {
        mfaToken: any;
        mfaRequired: any;
        loading: boolean;
        error: undefined;
        step: LoginStep.loginWithTwoFactor | LoginStep.forceTwoFactor;
        tenantsLoading: boolean;
        email: any;
        tenants: never[];
        allowRememberMfaDevice: any;
        mfaDeviceExpiration: any;
        isBreachedPassword: any;
        flow: LoginFlow;
        ssoRedirectUrl?: string | undefined;
        inviteTokenTenantName?: string | undefined;
        inviteTokenError?: string | undefined;
        isNewUser?: boolean | undefined;
        phoneNumber?: string | undefined;
        quickLoginToRegister?: QuickLoginStrategy | undefined;
        changePhoneId?: string | undefined;
    };
}, AuthState & {
    isAllowedToRemember: any;
    mfaDeviceExpiration: any;
}>;
