import { ContextOptions, ICustomSocialLoginProviderConfigurationV1, ISocialLoginProviderConfiguration, ISocialLoginProviderConfigurationV2 } from '@frontegg/rest-api';
import { PayloadAction } from '@reduxjs/toolkit';
import { SocialLoginState } from './interfaces';
import { WithCallback } from '../../interfaces';
export declare function loadSocialLoginsConfigurations(): Generator<import("redux-saga/effects").PutEffect<{
    payload: Partial<SocialLoginState>;
    type: string;
}> | import("redux-saga/effects").CallEffect<ISocialLoginProviderConfiguration[]>, void, ISocialLoginProviderConfiguration[]>;
export declare function getSocialLoginsConfigurationsV2(): Generator<import("redux-saga/effects").SelectEffect | import("redux-saga/effects").CallEffect<ISocialLoginProviderConfigurationV2[]>, ISocialLoginProviderConfigurationV2[], (false & ISocialLoginProviderConfigurationV2[]) | (true & ISocialLoginProviderConfigurationV2[])>;
export declare function loadSocialLoginsConfigurationsV2(action?: PayloadAction<WithCallback<{}, SocialLoginState>>): Generator<import("redux-saga/effects").SelectEffect | import("redux-saga/effects").PutEffect<{
    payload: Partial<SocialLoginState>;
    type: string;
}> | import("redux-saga/effects").CallEffect<ISocialLoginProviderConfigurationV2[]> | import("redux-saga/effects").CallEffect<ICustomSocialLoginProviderConfigurationV1>, void, ContextOptions & ISocialLoginProviderConfigurationV2[] & ICustomSocialLoginProviderConfigurationV1>;
export declare function socialLoginsSaga(): Generator<import("redux-saga/effects").ForkEffect<never>, void, unknown>;
