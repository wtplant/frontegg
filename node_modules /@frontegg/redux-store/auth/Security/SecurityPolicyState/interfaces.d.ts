import { WithCallback, WithStatus } from '../../../interfaces';
import { ISaveSecurityPolicyLockout, ISaveSecurityPolicyMfa, ISaveSecurityPolicyPasswordHistory, ISecurityPolicy, ISecurityPolicyCaptcha, ISecurityPolicyLockout, ISecurityPolicyMfa, ISecurityPolicyPasswordHistory, ISecurityPolicyPasswordConfig, IVendorConfig, IAuthStrategiesConfig } from '@frontegg/rest-api';
declare type PolicyState<T> = WithStatus & {
    policy?: T;
};
export declare type GlobalPolicyState = PolicyState<ISecurityPolicy>;
export declare type PublicPolicyState = PolicyState<IVendorConfig>;
export declare type MfaPolicyState = PolicyState<ISecurityPolicyMfa>;
export declare type LockoutPolicyState = PolicyState<ISecurityPolicyLockout>;
export declare type CaptchaPolicyState = PolicyState<ISecurityPolicyCaptcha>;
export declare type PasswordHistoryPolicyState = PolicyState<ISecurityPolicyPasswordHistory>;
export declare type PasswordPolicyState = PolicyState<ISecurityPolicyPasswordConfig>;
export declare type PublicAuthStrategyPolicyState = PolicyState<IAuthStrategiesConfig>;
export interface SecurityPolicyState {
    globalPolicy: GlobalPolicyState;
    publicPolicy: PublicPolicyState;
    mfaPolicy: MfaPolicyState;
    vendorMfaPolicy: MfaPolicyState;
    lockoutPolicy: LockoutPolicyState;
    vendorLockoutPolicy: LockoutPolicyState;
    captchaPolicy: CaptchaPolicyState;
    passwordHistoryPolicy: PasswordHistoryPolicyState;
    vendorPasswordHistoryPolicy: PasswordHistoryPolicyState;
    passwordPolicy: PasswordPolicyState;
    publicAuthStrategyPolicy: PublicAuthStrategyPolicyState;
}
export declare type SaveSecurityPolicyMfaPayload = WithCallback<ISaveSecurityPolicyMfa, ISecurityPolicyMfa>;
export declare type SaveSecurityPolicyLockoutPayload = WithCallback<ISaveSecurityPolicyLockout, ISecurityPolicyLockout>;
export declare type SaveSecurityPolicyPasswordHistoryPayload = WithCallback<ISaveSecurityPolicyPasswordHistory, ISecurityPolicyPasswordHistory>;
export {};
