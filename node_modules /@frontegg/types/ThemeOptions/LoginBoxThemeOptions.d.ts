import { BaseThemeOptions } from './index';
import { CSSProperties } from '../Common';
import { AuthPageCustomComponents } from '../CustomComponents';
export interface SocialLoginButton extends BaseThemeOptions {
    icon?: any;
    background?: CSSProperties['background'];
    default: {
        color?: CSSProperties['color'];
    };
    hover: {
        color?: CSSProperties['color'];
        background?: CSSProperties['background'];
    };
    selected: {
        color?: CSSProperties['color'];
        background?: CSSProperties['background'];
    };
}
export declare type SocialLoginTypes = 'google' | 'gitHub' | 'facebook' | 'microsoft' | 'slack' | 'apple' | 'linkedin';
export declare type SocialLogins = BaseThemeOptions & {
    rowLayout?: boolean;
    iconWidth?: string;
} & Record<SocialLoginTypes, SocialLoginButton>;
export interface AuthPageThemeOptions extends BaseThemeOptions, AuthPageCustomComponents {
    style?: CSSProperties & {
        [k in string]: CSSProperties;
    };
    layout?: {
        width?: CSSProperties['width'];
        marginLeft?: CSSProperties['marginLeft'];
        outerCustomBackground?: any;
    };
}
export interface LoginFormThemeOptions extends AuthPageThemeOptions {
    footer?: any;
    preLogin?: AuthPageThemeOptions;
    loginWithTowFactor?: AuthPageThemeOptions;
    loginWIthPassword?: AuthPageThemeOptions;
    recoverTowFactor?: AuthPageThemeOptions;
    loginSuccessRedirect?: AuthPageThemeOptions;
    magicLinkPreSuccess?: AuthPageThemeOptions;
    sso?: AuthPageThemeOptions;
    redirectSso?: AuthPageThemeOptions;
    loginWithSsoFailed?: AuthPageThemeOptions;
    forceEnrollMfa?: AuthPageThemeOptions;
}
