import { ExtendedCSSProperties } from '../../Common';
import { BaseTheme, BaseThemeOptions, ButtonThemeOptions } from '../index';
export interface SocialLoginComponentKeyRender {
    divider: {
        text: string;
    };
    googleIcon: {};
    microsoftIcon: {};
    facebookIcon: {};
    githubIcon: {};
    slackIcon: {};
    appleIcon: {};
    linkedinIcon: {};
}
export declare type SocialLoginCustomComponent<T extends keyof SocialLoginComponentKeyRender> = string | ((props?: SocialLoginComponentKeyRender[T]) => string | any);
export interface SocialLoginsLayoutBase {
    placement?: 'bottom' | 'top';
    stackedContainerStyle?: ExtendedCSSProperties;
    stackedButtonsStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    mainButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    showStackedButtonsWithText?: boolean;
}
export interface SocialLoginsLayoutStacked extends SocialLoginsLayoutBase {
    mode: 'stack';
    mainButton?: string;
}
export declare type SocialLoginsLayoutEventually = SocialLoginsLayoutBase & {
    mode: 'eventually';
};
export declare type SocialLoginsLayout = SocialLoginsLayoutStacked | SocialLoginsLayoutEventually;
export interface SocialLoginsCustomComponents {
    divider?: SocialLoginCustomComponent<'divider'>;
    dividerStyle?: ExtendedCSSProperties;
    dividerTextStyle?: ExtendedCSSProperties;
}
export interface SocialLoginsThemeOptions extends BaseThemeOptions, SocialLoginsCustomComponents {
    socialLoginsLayout?: SocialLoginsLayout;
    containerStyle?: ExtendedCSSProperties;
    buttonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    iconsOnly?: boolean;
    googleIcon?: SocialLoginCustomComponent<'googleIcon'>;
    googleButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    microsoftIcon?: SocialLoginCustomComponent<'microsoftIcon'>;
    microsoftButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    facebookIcon?: SocialLoginCustomComponent<'facebookIcon'>;
    facebookButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    githubIcon?: SocialLoginCustomComponent<'githubIcon'>;
    githubButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    slackIcon?: SocialLoginCustomComponent<'slackIcon'>;
    slackButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    appleIcon?: SocialLoginCustomComponent<'appleIcon'>;
    appleButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    linkedinIcon?: SocialLoginCustomComponent<'linkedinIcon'>;
    linkedinButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
}
export interface SocialLoginsTheme extends BaseTheme {
    socialLoginsLayout?: SocialLoginsLayout;
    dividerStyle?: ExtendedCSSProperties;
    dividerTextStyle?: ExtendedCSSProperties;
    divider?: SocialLoginCustomComponent<'divider'>;
    containerStyle?: ExtendedCSSProperties;
    buttonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    iconsOnly?: boolean;
    googleIcon?: SocialLoginCustomComponent<'googleIcon'>;
    googleButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    microsoftIcon?: SocialLoginCustomComponent<'microsoftIcon'>;
    microsoftButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    facebookIcon?: SocialLoginCustomComponent<'facebookIcon'>;
    facebookButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    githubIcon?: SocialLoginCustomComponent<'githubIcon'>;
    githubButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    slackIcon?: SocialLoginCustomComponent<'slackIcon'>;
    slackButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    appleIcon?: SocialLoginCustomComponent<'appleIcon'>;
    appleButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
    linkedinIcon?: SocialLoginCustomComponent<'linkedinIcon'>;
    linkedinButtonStyle?: Omit<ButtonThemeOptions, 'disabled'>;
}
