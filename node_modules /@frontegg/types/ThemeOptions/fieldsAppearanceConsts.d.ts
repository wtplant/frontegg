export declare type HiddenOrEdit = 'hidden' | 'edit';
export declare type FieldAppearance = 'viewOnly' | HiddenOrEdit;
export declare type TabAppearance = 'hidden' | 'edit';
export interface FieldSettings {
    validation?: {
        required?: boolean;
    };
}
export declare enum ProfilePageFields {
    Name = "name",
    PhoneNumber = "phoneNumber",
    Address = "address",
    JobTitle = "jobTitle"
}
export interface MapProfileFieldToAppearance extends Record<keyof ProfilePageFields, HiddenOrEdit> {
    [ProfilePageFields.Address]: HiddenOrEdit;
    [ProfilePageFields.JobTitle]: HiddenOrEdit;
    [ProfilePageFields.Name]: HiddenOrEdit;
    [ProfilePageFields.PhoneNumber]: HiddenOrEdit;
}
export declare enum PrivacyPageFields {
    LoginSessions = "loginSessions",
    Mfa = "mfa"
}
export declare enum InviteUserModalFields {
    Name = "name",
    PhoneNumber = "phoneNumber"
}
export interface MapInviteUserFieldToAppearance extends Record<keyof InviteUserModalFields, HiddenOrEdit> {
    [InviteUserModalFields.Name]: HiddenOrEdit;
    [InviteUserModalFields.PhoneNumber]: HiddenOrEdit;
}
export interface MapInviteUserFieldToSettings extends Record<keyof InviteUserModalFields, FieldSettings> {
    [InviteUserModalFields.Name]: FieldSettings;
    [InviteUserModalFields.PhoneNumber]: FieldSettings;
}
export interface MapPrivacyFieldToAppearance extends Record<keyof PrivacyPageFields, HiddenOrEdit> {
    [PrivacyPageFields.LoginSessions]: HiddenOrEdit;
    [PrivacyPageFields.Mfa]: HiddenOrEdit;
}
export declare enum AccountPageFields {
    CompanyName = "companyName",
    Address = "address",
    Website = "website",
    Timezone = "timezone",
    Currency = "currency"
}
export interface MapAccountFieldToAppearance extends Record<keyof AccountPageFields, FieldAppearance> {
    [AccountPageFields.CompanyName]: FieldAppearance;
    [AccountPageFields.Address]: HiddenOrEdit;
    [AccountPageFields.Website]: HiddenOrEdit;
    [AccountPageFields.Timezone]: HiddenOrEdit;
    [AccountPageFields.Currency]: HiddenOrEdit;
}
export declare enum SubscriptionsPageFields {
    Invoices = "invoices"
}
export interface MapSubscriptionsFieldToAppearance extends Record<keyof SubscriptionsPageFields, HiddenOrEdit> {
    [SubscriptionsPageFields.Invoices]: HiddenOrEdit;
}
export declare enum SecurityPageTabs {
    SessionManagement = "sessionManagement",
    GeneralSettings = "generalSettings",
    IpRestrictions = "ipRestrictions",
    DomainRestrictions = "domainRestrictions"
}
export declare enum SessionManagementTabFields {
    IdleSessionTimeout = "idleSessionTimeout",
    ForceReLogin = "forceReLogin",
    MaximumConcurrentSessions = "maximumConcurrentSessions"
}
export declare enum GeneralSettingsTabFields {
    Mfa = "mfa",
    UserLockout = "userLockout",
    PasswordHistory = "passwordHistory"
}
export declare enum IpRestrictionsTabFields {
    IpAddressRestrictions = "ipAddressRestrictions"
}
export declare enum DomainRestrictionsTabFields {
    RestrictSignupByEmailDomain = "restrictSignupByEmailDomain"
}
export interface MapSecurityFieldToAppearance extends Record<keyof SecurityPageFields, FieldAppearance> {
    [SessionManagementTabFields.IdleSessionTimeout]: FieldAppearance;
    [SessionManagementTabFields.ForceReLogin]: FieldAppearance;
    [SessionManagementTabFields.MaximumConcurrentSessions]: FieldAppearance;
    [GeneralSettingsTabFields.Mfa]: FieldAppearance;
    [GeneralSettingsTabFields.UserLockout]: FieldAppearance;
    [GeneralSettingsTabFields.PasswordHistory]: FieldAppearance;
    [IpRestrictionsTabFields.IpAddressRestrictions]: HiddenOrEdit;
    [DomainRestrictionsTabFields.RestrictSignupByEmailDomain]: HiddenOrEdit;
}
export declare type SecurityPageFields = SessionManagementTabFields | GeneralSettingsTabFields | IpRestrictionsTabFields | DomainRestrictionsTabFields;
export declare enum AccountDetailsPageTabs {
    Settings = "settings",
    CustomLogin = "customLogin"
}
