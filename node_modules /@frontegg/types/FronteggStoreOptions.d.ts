import { AuditsState, AuthState, AuthPageRoutes } from '@frontegg/redux-store';
export interface AuthOptions extends Partial<Omit<AuthState, 'routes'>> {
    keepSessionAlive?: boolean;
    includeQueryParam?: boolean;
    routes?: Partial<AuthPageRoutes>;
    disableSilentRefresh?: boolean;
    /**
     * Determine if each tab operates with a separate tenant context
     */
    enableSessionPerTenant?: boolean;
    /**
     * Determine if the redirect url query param of after auth should be enforced to same site
     */
    enforceRedirectToSameSite?: boolean;
    /**
     * In case enforceRedirectToSameSite is enabled, use this white list to include all allowed origin of after auth redirect url
     */
    allowedRedirectOrigins?: string[];
    /**
     * Origins that are allowed to clear idle session timeout from
     */
    clearIdleTimeoutAllowedOrigins?: string[];
    /**
     * Advanced options for social logins flow
     */
    socialLoginOptions?: {
        promptConsent?: boolean;
    };
    /**
     * Advanced options for hosted login mode
     */
    hostedLoginOptions?: {
        /**
         * Loading the user when the application renders, hiding your children until the user is loaded if exists
         */
        loadUserOnFirstLoad?: boolean;
    };
}
export interface AuditsOptions extends Partial<AuditsState> {
    virtualScroll?: boolean;
}
export interface SubscriptionsOptions {
    billingAddressCollection?: boolean;
}
export interface FronteggStoreOptions {
    authOptions?: AuthOptions;
    auditsOptions?: AuditsOptions;
    subscriptionsOptions?: SubscriptionsOptions;
}
