export interface Recommendation {
    code: RecommendationCode;
    severity: RecommendationSeverity;
    category: SecurityCategory;
    metadata?: RecommendationMetadata;
}
export interface Insight {
    code: InsightCode;
    metadata?: InsightsMetadata;
    category: SecurityCategory;
}
interface BaseRecommendationMetadata {
    totalUsers?: number;
    mfa?: {
        enrolledUsersCount?: number;
    };
    inactivity?: {
        staleUsersCount?: number;
    };
    password?: {
        breachedPasswordUsersCount?: number;
        historyRecommendations?: number;
        userLockoutRecommendation?: number;
    };
    sessions?: {
        configuredSessionSettings?: number;
        forceReloginRecommendation?: number;
        concurrencyRecommendation?: number;
        idleTimeoutRecommendation?: number;
    };
    restrictions?: {
        ipsCount?: number;
        domainsCount?: number;
    };
}
export declare type RecommendationMetadata = BaseRecommendationMetadata;
export declare type InsightsMetadata = BaseRecommendationMetadata;
export declare enum RecommendationCode {
    FORCE_MFA = "FORCE_MFA",
    BREACHED_PASSWORDS_EXIST = "BREACHED_PASSWORDS_EXIST",
    ENABLE_USER_LOCKOUT = "ENABLE_USER_LOCKOUT",
    STRENGTHEN_USER_LOCKOUT = "STRENGTHEN_USER_LOCKOUT",
    ENABLE_PASSWORD_HISTORY = "ENABLE_PASSWORD_HISTORY",
    STRENGTHEN_PASSWORD_HISTORY = "STRENGTHEN_PASSWORD_HISTORY",
    ENABLE_FORCE_RELOGIN = "ENABLE_FORCE_RELOGIN",
    SET_FORCE_RELOGIN = "SET_FORCE_RELOGIN",
    ENABLE_SESSION_CONCURRENCY = "ENABLE_SESSION_CONCURRENCY",
    SET_SESSION_CONCURRENCY = "SET_SESSION_CONCURRENCY",
    ENABLE_IDLE_SESSION = "ENABLE_IDLE_SESSION",
    SET_IDLE_SESSION = "SET_IDLE_SESSION",
    ENABLE_IP_RESTRICTIONS = "ENABLE_IP_RESTRICTIONS",
    CHANGE_IP_TO_ALLOWLIST = "CHANGE_IP_TO_ALLOWLIST",
    ENABLE_DOMAIN_RESTRICTIONS = "ENABLE_DOMAIN_RESTRICTIONS",
    CHANGE_DOMAIN_TO_ALLOWLIST = "CHANGE_DOMAIN_TO_ALLOWLIST",
    CONFIGURE_SSO = "CONFIGURE_SSO"
}
export declare enum InsightCode {
    MFA_FORCED = "MFA_FORCED",
    PARTIALLY_FORCED_MFA = "PARTIALLY_FORCED_MFA",
    PARTIAL_MFA_USAGE = "PARTIAL_MFA_USAGE",
    FULL_MFA_USAGE = "FULL_MFA_USAGE",
    BREACHED_PASSWORD_USERS_EXIST = "BREACHED_PASSWORD_USERS_EXIST",
    IMPROVE_LOCKOUT_POLICY = "IMPROVE_LOCKOUT_POLICY",
    IMPROVE_PASSWORD_HISTORY_POLICY = "IMPROVE_PASSWORD_HISTORY_POLICY",
    NO_SESSION_SETTINGS = "NO_SESSION_SETTINGS",
    PARTIAL_SESSION_SETTINGS = "PARTIAL_SESSION_SETTINGS",
    FULL_SESSION_SETTINGS = "FULL_SESSION_SETTINGS",
    NO_IP_RESTRICTIONS = "NO_IP_RESTRICTIONS",
    IP_ALLOWLIST = "IP_ALLOWLIST",
    IP_DENYLIST = "IP_DENYLIST",
    NO_DOMAIN_RESTRICTIONS = "NO_DOMAIN_RESTRICTIONS",
    DOMAIN_ALLOWLIST = "DOMAIN_ALLOWLIST",
    DOMAIN_DENYLIST = "DOMAIN_DENYLIST",
    FULL_PASSWORD_SETTINGS = "FULL_PASSWORD_SETTINGS"
}
export interface RecommendationAction {
    key: RecommendationActionKey;
}
export declare enum RecommendationActionKey {
    SEND_RESET_BREACHED_PASSWORD_EMAIL = "SEND_RESET_BREACHED_PASSWORD_EMAIL",
    ADJUST_FORCE_RELOGIN = "ADJUST_FORCE_RELOGIN",
    ADJUST_MAX_CONCURRENT_SESSIONS = "ADJUST_MAX_CONCURRENT_SESSIONS",
    ADJUST_IDLE_TIMEOUT = "ADJUST_IDLE_TIMEOUT"
}
export declare enum RecommendationSeverity {
    SEVERE = "SEVERE",
    WARNING = "WARNING",
    INFO = "INFO"
}
export declare enum SecurityCategory {
    MFA = "MFA",
    SESSIONS = "SESSIONS",
    PASSWORD = "PASSWORD",
    INACTIVITY = "INACTIVITY",
    IP = "IP",
    DOMAIN = "DOMAIN",
    SSO = "SSO"
}
export interface ScoringResponse {
    score: number;
}
export interface RecommendationsResponse {
    items: Recommendation[];
}
export interface GetRecommendationsResponse {
    scoring: ScoringResponse;
    recommendations: RecommendationsResponse;
}
export interface InsightsResponse {
    items: Insight[];
}
export interface GetInsightsResponse {
    insights: InsightsResponse;
}
export {};
