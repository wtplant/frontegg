import { IWebhookTest, IWebhooksSaveData, ISlackSubscription, IEmailSMSConfigResponse, IEmailSMSSubscriptionResponse } from './interfaces';
export declare const getSlackConfiguration: () => Promise<any>;
export declare const getSlackScope: () => Promise<any>;
export declare const getSlackChannels: () => Promise<any>;
export declare const postSlackConfiguration: (data: ISlackSubscription) => Promise<any>;
export declare const deleteSlackConfiguration: (data: Required<ISlackSubscription>) => Promise<any>;
export declare const postSlackCode: (code: string) => Promise<any>;
export declare const getEmailConfiguration: () => Promise<IEmailSMSConfigResponse[]>;
export declare const postEmailConfiguration: ({ eventKey, ...data }: IEmailSMSConfigResponse) => Promise<null>;
export declare const patchEmailConfiguration: ({ eventKey, enabled, }: Pick<IEmailSMSConfigResponse, 'eventKey' | 'enabled'>) => Promise<null>;
export declare const deleteEmailSubscriptions: (eventKey: string, subscriptionId: string) => Promise<null>;
export declare const putEmailSubscriptions: (subscriptionId: string, eventKey: string, data: IEmailSMSSubscriptionResponse) => Promise<null>;
export declare const deleteEmailConfiguration: (eventKey: string) => Promise<null>;
export declare const getSMSConfiguration: () => Promise<IEmailSMSConfigResponse[]>;
export declare const postSMSConfiguration: ({ eventKey, ...data }: IEmailSMSConfigResponse) => Promise<any>;
export declare const patchSMSConfiguration: ({ eventKey, enabled, }: Pick<IEmailSMSConfigResponse, 'eventKey' | 'enabled'>) => Promise<null>;
export declare const deleteSMSSubscriptions: (eventKey: string, subscriptionId: string) => Promise<null>;
export declare const putSMSSubscriptions: (subscriptionId: string, eventKey: string, data: IEmailSMSSubscriptionResponse) => Promise<null>;
export declare const deleteSMSConfiguration: (eventKey: string) => Promise<null>;
export declare const getWebhooksConfigurations: () => Promise<any>;
export declare const postWebhooksConfiguration: (data: IWebhooksSaveData) => Promise<any>;
export declare const deleteWebhooksConfiguration: (id: string) => Promise<null>;
export declare const getWebhookLog: (id: string, offset?: number, limit?: number) => Promise<any>;
export declare const postWebhookTest: (data: IWebhookTest) => Promise<any>;
export declare const postWebhookRetry: (id: string) => Promise<any>;
export declare const getCategories: () => Promise<any>;
export declare const getChannelMaps: (channels: string) => Promise<any>;
