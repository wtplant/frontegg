"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TrialEndAction = exports.TenantCreatedAction = exports.ProviderType = exports.PaymentMethodType = exports.ISubscriptionStatus = exports.ISubscriptionCancellationPolicy = void 0;
let ISubscriptionStatus;
exports.ISubscriptionStatus = ISubscriptionStatus;

(function (ISubscriptionStatus) {
  ISubscriptionStatus["ACTIVE"] = "active";
  ISubscriptionStatus["CANCELED"] = "canceled";
  ISubscriptionStatus["INCOMPLETE"] = "incomplete";
  ISubscriptionStatus["EXPIRED"] = "expired";
  ISubscriptionStatus["TRIALING"] = "trialing";
  ISubscriptionStatus["TRIAL_ENDED"] = "trialEnded";
})(ISubscriptionStatus || (exports.ISubscriptionStatus = ISubscriptionStatus = {}));

let PaymentMethodType;
exports.PaymentMethodType = PaymentMethodType;

(function (PaymentMethodType) {
  PaymentMethodType["UNKNWON"] = "unknown";
  PaymentMethodType["CARD"] = "card";
})(PaymentMethodType || (exports.PaymentMethodType = PaymentMethodType = {}));

let ISubscriptionCancellationPolicy;
exports.ISubscriptionCancellationPolicy = ISubscriptionCancellationPolicy;

(function (ISubscriptionCancellationPolicy) {
  ISubscriptionCancellationPolicy["AT_PERIOD_END"] = "atPeriodEnd";
})(ISubscriptionCancellationPolicy || (exports.ISubscriptionCancellationPolicy = ISubscriptionCancellationPolicy = {}));

let ProviderType;
exports.ProviderType = ProviderType;

(function (ProviderType) {
  ProviderType["Stripe"] = "Stripe";
})(ProviderType || (exports.ProviderType = ProviderType = {}));

let TrialEndAction;
exports.TrialEndAction = TrialEndAction;

(function (TrialEndAction) {
  TrialEndAction["CHANGE_TO_DEFAULT"] = "change_to_default";
  TrialEndAction["RETAIN_TRIAL"] = "retain_trial";
})(TrialEndAction || (exports.TrialEndAction = TrialEndAction = {}));

let TenantCreatedAction;
exports.TenantCreatedAction = TenantCreatedAction;

(function (TenantCreatedAction) {
  TenantCreatedAction["CREATE"] = "create_customer";
})(TenantCreatedAction || (exports.TenantCreatedAction = TenantCreatedAction = {}));