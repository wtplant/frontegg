"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FeatureFlags = void 0;
exports.loadFeatureFlags = loadFeatureFlags;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _constants = require("../constants");

var _fetch = require("../fetch");

const defaultFeatureFlags = {
  flags: {}
};

class FeatureFlags {
  constructor() {
    var _defaultFeatureFlags$;

    this._flags = {};
    this._flags = (_defaultFeatureFlags$ = defaultFeatureFlags.flags) != null ? _defaultFeatureFlags$ : {};
  }

  static getInstance(name = "default") {
    return this._instances[name];
  }

  static set(featureFlags, name = "default") {
    const featureFlagsInstance = new FeatureFlags();
    featureFlagsInstance.set(featureFlags);
    FeatureFlags._instances[name] = featureFlagsInstance;
    return featureFlagsInstance;
  }

  static getFeatureFlags(flags, name) {
    const featureFlagsInstance = this.getInstance(name);
    return flags.map(flag => (featureFlagsInstance == null ? void 0 : featureFlagsInstance._flags[flag]) === "on");
  }

  get flags() {
    var _this$flags;

    return (_this$flags = this.flags) != null ? _this$flags : {};
  }

  set(featureFlags) {
    var _defaultFeatureFlags$2;

    this._flags = (0, _extends2.default)({}, (_defaultFeatureFlags$2 = defaultFeatureFlags == null ? void 0 : defaultFeatureFlags.flags) != null ? _defaultFeatureFlags$2 : {}, featureFlags != null ? featureFlags : {});
  }

}

exports.FeatureFlags = FeatureFlags;
FeatureFlags._instances = {};

async function loadFeatureFlags() {
  return (0, _fetch.Get)(_constants.urls.featureFlags.v1);
}