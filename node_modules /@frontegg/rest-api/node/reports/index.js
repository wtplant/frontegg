"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.downloadReport = downloadReport;
exports.getReport = getReport;
exports.getReports = getReports;
exports.renderReport = renderReport;
exports.scheduleReport = scheduleReport;
exports.sendReport = sendReport;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _fetch = require("../fetch");

var _constants = require("../constants");

const _excluded = ["dataFilters"],
      _excluded2 = ["templateId", "dataFilters"],
      _excluded3 = ["dataFilters"];

async function getReports(body) {
  return (0, _fetch.Get)(`${_constants.urls.reports.service.v2}/tenant-reports`, body);
}

async function getReport(body) {
  return (0, _fetch.Get)(`${_constants.urls.reports.service.v2}/${body.id}/tenant-reports`);
}

async function renderReport(_ref) {
  let {
    dataFilters
  } = _ref,
      body = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
  const html = await (0, _fetch.Get)(`${_constants.urls.reports.trigger.v1}/preview-report`, (0, _extends2.default)({}, body, {
    dataFilters: btoa(JSON.stringify(dataFilters || {})),
    responseType: 'html'
  }), {
    responseType: 'plain'
  });
  return {
    html
  };
}

async function scheduleReport(_ref2) {
  let {
    templateId,
    dataFilters
  } = _ref2,
      body = (0, _objectWithoutPropertiesLoose2.default)(_ref2, _excluded2);
  return (0, _fetch.Post)(`${_constants.urls.reports.service.v2}/${templateId}/tenant-reports`, (0, _extends2.default)({}, body, {
    dataFilters: btoa(JSON.stringify(dataFilters || {}))
  }));
}

async function downloadReport(_ref3) {
  let {
    dataFilters
  } = _ref3,
      body = (0, _objectWithoutPropertiesLoose2.default)(_ref3, _excluded3);
  const blob = await (0, _fetch.Get)(`${_constants.urls.reports.trigger.v1}/preview-report`, (0, _extends2.default)({}, body, {
    dataFilters: btoa(JSON.stringify(dataFilters || {}))
  }), {
    responseType: 'blob'
  });
  let contentType = 'text/html';
  let contentExt = 'html';

  if (body.responseType === 'pdf') {
    contentType = 'application/pdf';
    contentExt = 'pdf';
  } else if (body.responseType === 'image') {
    contentType = 'image/jpeg';
    contentExt = 'jpg';
  }

  const newBlob = new Blob([blob], {
    type: contentType
  });
  const fileURL = URL.createObjectURL(newBlob);
  const tempLink = document.createElement('a');
  tempLink.href = fileURL;
  tempLink.setAttribute('download', `report_${body.name || ''}.${contentExt}`);
  tempLink.click();
  setTimeout(tempLink.remove.bind(tempLink));
}

async function sendReport(body) {
  return (0, _fetch.Post)(`${_constants.urls.reports.trigger.v1}/tenant-reports`, body);
}