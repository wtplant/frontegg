"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addRolesToGroup = addRolesToGroup;
exports.addUsersToGroup = addUsersToGroup;
exports.createGroup = createGroup;
exports.deleteGroup = deleteGroup;
exports.deleteRolesFromGroup = deleteRolesFromGroup;
exports.deleteUsersFromGroup = deleteUsersFromGroup;
exports.getGroupById = getGroupById;
exports.getGroupConfiguration = getGroupConfiguration;
exports.getGroups = getGroups;
exports.getGroupsByIds = getGroupsByIds;
exports.updateGroup = updateGroup;
exports.updateGroupConfiguration = updateGroupConfiguration;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _constants = require("../constants");

var _fetch = require("../fetch");

const _excluded = ["groupId"];

async function getGroupById({
  groupId
}, query) {
  return (0, _fetch.Get)(`${_constants.urls.identity.groups.v1}/${groupId}`, (0, _extends2.default)({}, query));
}

async function getGroups(query) {
  return (0, _fetch.Get)(`${_constants.urls.identity.groups.v1}`, (0, _extends2.default)({}, query));
}

async function getGroupsByIds(body, params) {
  return (0, _fetch.Post)(`${_constants.urls.identity.groups.getByIds.v1}`, body, {
    params
  });
}

async function createGroup(body) {
  return (0, _fetch.Post)(`${_constants.urls.identity.groups.v1}`, body);
}

async function updateGroup(_ref) {
  let {
    groupId
  } = _ref,
      body = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
  return (0, _fetch.Patch)(`${_constants.urls.identity.groups.v1}/${groupId}`, body);
}

async function deleteGroup(groupId) {
  return (0, _fetch.Delete)(`${_constants.urls.identity.groups.v1}/${groupId}`);
}

async function addRolesToGroup(groupId, body) {
  return (0, _fetch.Post)(`${_constants.urls.identity.groups.v1}/${groupId}/roles`, body);
}

async function deleteRolesFromGroup(groupId, body) {
  return (0, _fetch.Delete)(`${_constants.urls.identity.groups.v1}/${groupId}/roles`, body);
}

async function addUsersToGroup(groupId, body) {
  return (0, _fetch.Post)(`${_constants.urls.identity.groups.v1}/${groupId}/users`, body);
}

async function deleteUsersFromGroup(groupId, body) {
  return (0, _fetch.Delete)(`${_constants.urls.identity.groups.v1}/${groupId}/users`, body);
}

async function getGroupConfiguration() {
  return (0, _fetch.Get)(`${_constants.urls.identity.groups.configurations.v1}`);
}

async function updateGroupConfiguration(body) {
  return (0, _fetch.Post)(`${_constants.urls.identity.groups.configurations.v1}`, body);
}