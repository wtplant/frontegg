"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GetUserJwt = GetUserJwt;
exports.getCurrentUserTenantsV1 = getCurrentUserTenantsV1;
exports.getCurrentUserTenantsV3 = getCurrentUserTenantsV3;
exports.getUsersGroups = getUsersGroups;
exports.getUsersRoles = getUsersRoles;
exports.getUsersV2 = getUsersV2;
exports.getUsersV3 = getUsersV3;
exports.sendResetBreachedPasswordEmails = sendResetBreachedPasswordEmails;
exports.updateUserProfileV2 = updateUserProfileV2;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _fetch = require("../fetch");

var _constants = require("../constants");

async function GetUserJwt(body) {
  return (0, _fetch.Post)(`${_constants.urls.identity.users.v3}/me/token`, body);
}

async function getUsersV2(queryParams, options) {
  return (0, _fetch.Get)(_constants.urls.identity.users.v2, queryParams, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function getUsersV3(queryParams, options) {
  return (0, _fetch.Get)(_constants.urls.identity.users.v3, queryParams, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function getUsersRoles(queryParams, options) {
  return (0, _fetch.Get)(_constants.urls.identity.users.roles.v3, (0, _extends2.default)({}, queryParams, {
    ids: queryParams.ids.join(',')
  }), {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function getUsersGroups(queryParams, options) {
  return (0, _fetch.Get)(_constants.urls.identity.users.groups.v3, (0, _extends2.default)({}, queryParams, {
    ids: queryParams.ids.join(",")
  }), {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function getCurrentUserTenantsV3(options) {
  return (0, _fetch.Get)(_constants.urls.identity.users.tenants.me.v3, undefined, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function getCurrentUserTenantsV1(options) {
  return (0, _fetch.Get)(_constants.urls.identity.users.tenants.me.v1, undefined, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function sendResetBreachedPasswordEmails() {
  return (0, _fetch.Post)(_constants.urls.identity.users.passwords.resetBreachedPasswords.v1);
}

async function updateUserProfileV2(body) {
  return (0, _fetch.Put)(`${_constants.urls.identity.users.v2}/me`, body);
}