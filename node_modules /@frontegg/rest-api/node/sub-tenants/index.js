"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addUserRolesForSubTenants = addUserRolesForSubTenants;
exports.addUserToTenantAndSubTenants = addUserToTenantAndSubTenants;
exports.addUsersToSubTenant = addUsersToSubTenant;
exports.createSubTenant = createSubTenant;
exports.deleteSubTenant = deleteSubTenant;
exports.loadAllUsers = loadAllUsers;
exports.removeUserFromTenantAndSubTenants = removeUserFromTenantAndSubTenants;
exports.removeUserRolesFromSubTenants = removeUserRolesFromSubTenants;
exports.setUserRolesForSubTenants = setUserRolesForSubTenants;
exports.updateSubAccountAccess = updateSubAccountAccess;
exports.updateSubTenant = updateSubTenant;

var _fetch = require("../fetch");

var _constants = require("../constants");

async function loadAllUsers(params) {
  return (0, _fetch.Get)(_constants.urls.identity.subTenants.v1, params);
}

async function addUserToTenantAndSubTenants(body) {
  return (0, _fetch.Post)(_constants.urls.identity.subTenants.v1, body);
}

async function removeUserFromTenantAndSubTenants(body, options) {
  return (0, _fetch.Delete)(_constants.urls.identity.subTenants.v1, body, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function addUserRolesForSubTenants(userId, body, options) {
  return (0, _fetch.Post)(`${_constants.urls.identity.subTenants.v1}/${userId}/roles`, body, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function removeUserRolesFromSubTenants(userId, body, options) {
  return (0, _fetch.Delete)(`${_constants.urls.identity.subTenants.v1}/${userId}/roles`, body, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function setUserRolesForSubTenants(userId, body, options) {
  return (0, _fetch.Patch)(`${_constants.urls.identity.subTenants.v1}/${userId}/roles`, body, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function createSubTenant(body, options) {
  return (0, _fetch.Post)(_constants.urls.tenants.subTenants.v1, body, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function deleteSubTenant(tenantId, options) {
  return (0, _fetch.Delete)(`${_constants.urls.tenants.subTenants.v1}/${tenantId}`, undefined, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function updateSubTenant({
  tenantId
}, body, options) {
  return (0, _fetch.Patch)(`${_constants.urls.tenants.subTenants.v1}/${tenantId}`, body, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function updateSubAccountAccess(userId, body, options) {
  return (0, _fetch.Put)(`${_constants.urls.identity.subTenants.v1}/${userId}/access`, body, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}

async function addUsersToSubTenant(body, options) {
  return (0, _fetch.Post)(`${_constants.urls.identity.subTenants.v2}/`, body, {
    headers: (0, _fetch.extractHeadersFromOptions)(options)
  });
}