export declare type ILoadAllUsers = {
    _offset: number;
    _limit: number;
    _filter: string;
    _sortBy: string;
    _order: "ASC" | "DESC";
};
export declare type ISubTenantUserRole = {
    id: string;
    vendorId: string;
    tenantId: string;
    key: string;
    name: string;
    description: string;
    isDefault: boolean;
    firstUserRole: boolean;
    level: number;
    createdAt: Date;
    updatedAt: Date;
    permissions: string[];
};
export declare type ISubTenantUserPermission = {
    id: string;
    key: string;
    name: string;
    description: string;
    createdAt: Date;
    updatedAt: Date;
    roleIds: string[];
    categoryId: string;
    fePermission: boolean;
};
export declare type ISubTenantUserTenant = {
    tenantId: string;
    roles: ISubTenantUserRole[];
    permissions: ISubTenantUserPermission[];
    activated: boolean;
    lastLogin: Date;
};
export declare type ISubTenantUser = {
    id: string;
    sub: string;
    email: string;
    verified: boolean;
    mfaEnrolled: boolean;
    mfaBypass?: boolean;
    name?: string;
    phoneNumber?: string;
    profilePictureUrl?: string;
    provider: string;
    tenantId: string;
    tenantIds: string[];
    isLocked?: boolean;
    tenants: ISubTenantUserTenant[];
    invisible?: true;
    superUser?: true;
    metadata: string;
    createdAt: Date;
};
export interface AddUserToSubTenantsRequestUserDto {
    email: string;
    name?: string;
}
export interface AddUserToSubTenantsRequestTenantDto {
    tenantId: string;
    roleIds?: string[];
}
export interface AddUserToSubTenantsRequest {
    user: AddUserToSubTenantsRequestUserDto;
    subTenants: AddUserToSubTenantsRequestTenantDto[];
}
export interface RemoveUserFromSubTenantsRequestTenantDto {
    tenantId: string;
}
export interface RemoveUserFromSubTenantsRequest {
    userId: string;
    subTenants: RemoveUserFromSubTenantsRequestTenantDto[];
}
export interface UpdateUserRolesForSubTenantRequestDto {
    tenantId: string;
    roleIds: string[];
}
export interface UpdateUserRolesForSubTenantsRequestDto {
    subTenantsRoles: UpdateUserRolesForSubTenantRequestDto[];
    ipAddress?: string;
    userAgent?: string;
}
export interface CreateSubTenantRequest {
    tenantId: string;
    name: string;
    parentTenantId: string;
    status?: string;
    website?: string;
    applicationUrl?: string;
    logo?: string;
    logoUrl?: string;
    address?: string;
    timezone?: string;
    currency?: string;
    creatorName?: string;
    creatorEmail?: string;
    isReseller?: boolean;
}
export interface CreateSubTenantResponse {
    tenantId: string;
    name: string;
    status?: string;
    website?: string;
    applicationUrl?: string;
    logo?: string;
    logoUrl?: string;
    address?: string;
    timezone?: string;
    updatedAt?: Date;
    currency?: string;
}
export interface UpdateSubAccountAccessRequestDto {
    allowAccess: boolean;
}
export interface AddUsersToSubTenantRequestUserDto {
    email: string;
    name?: string;
}
export interface AddUsersToSubTenantRequest {
    users: AddUsersToSubTenantRequestUserDto[];
    tenantId: string;
    roleIds?: string[];
    allowSubAccountAccess?: boolean;
}
export interface UpdateSubTenantRequestParams {
    tenantId: string;
}
export interface UpdateSubTenantRequest {
    name: string;
}
