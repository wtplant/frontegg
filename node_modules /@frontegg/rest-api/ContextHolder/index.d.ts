import { SessionContext, ContextOptions, RedirectOptions, RequestSource } from '../interfaces';
import { IUserProfile } from "../users/interfaces";
/**
 * Entitlements config from frontegg provider
 */
export interface EntitlementsOptions {
    enabled?: boolean;
}
export declare class ContextHolder {
    private static instance;
    private context;
    private accessToken;
    private user;
    private requestSource;
    private onRedirectTo;
    private logout;
    private entitlementsOptions;
    private appName;
    private sessionContext?;
    private constructor();
    static getInstance(): ContextHolder;
    static setContext(context: ContextOptions): void;
    static setAccessToken(accessToken: string | null): void;
    static setUser(user: IUserProfile | null): void;
    static setRequestSource(requestSource: RequestSource | null): void;
    static setOnRedirectTo(onRedirectTo: (path: string, opts?: RedirectOptions) => void): void;
    static setLogout(logout: (callback?: () => void) => void, logoutUrl: string): void;
    /**
     * App name should also be set for entitlements
     * @param entitlementsOptions frontegg options entitlements config
     */
    static setEntitlementsOptions(entitlementsOptions: EntitlementsOptions): void;
    /**
     * @param sessionContext frontegg options SessionContext config
     */
    static setSessionContext(sessionContext: SessionContext): void;
    /**
     * @param appName for feature flags e.g.
     */
    static setAppName(appName: string | null): void;
    static getContext(): ContextOptions;
    static getAccessToken(): string | null;
    static getRequestSource(): RequestSource | null;
    static getUser(): IUserProfile | null;
    static onRedirectTo(path: string, opts?: RedirectOptions): void;
    static logout(callback?: () => void): void;
    /**
     * @returns shouldLoadEntitlements. Default to false.
     */
    static shouldLoadEntitlements(): boolean;
    /**
   * @returns isSessionPerTenantEnabled. Default to false.
   */
    static isSessionPerTenantEnabled(): boolean;
    /**
     * @returns app name value
     */
    static getAppName(): string | null;
}
export declare const FronteggContext: {
    getContext: () => ContextOptions;
    getAccessToken: () => string | null;
    getUser: () => IUserProfile | null;
    onRedirectTo: (path: string, opts: RedirectOptions) => void;
    logout: (callback?: (() => void) | undefined) => void;
};
