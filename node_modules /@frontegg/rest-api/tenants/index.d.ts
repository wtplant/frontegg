import { GetHierarchyMetadataParams, GetHierarchyMetadataResponse, IGetTenantsUserCountRequest, IGetTenantsUserCountResponse, IParentTenant, ISubTenant, ISubTenantTree, ISwitchTenant, ITenantsResponse, SearchSubTenantsParams, SearchSubTenantsResponse } from "./interfaces";
import { FronteggPaginationWrapper, UserJwtOptions } from "../interfaces";
/**
 * switch logged in user to specific tenant by providing tenantId.
 *
 * @throws exception if invalid tenantId.
 * ``authorized user``
 */
export declare function switchTenant(body: ISwitchTenant): Promise<void>;
/**
 * retrieve logged in user's available tenants.
 *
 * ``authorized user``
 */
export declare function getTenants(): Promise<ITenantsResponse[]>;
/**
 * retrieve logged in user's available sub tenants.
 *
 * ``authorized user``
 */
export declare function getSubTenants(options?: UserJwtOptions): Promise<ISubTenant>;
/**
 * retrieve logged in user's available sub tenants as a tree.
 *
 * ``authorized user``
 */
export declare function getSubTenantsAsTree(options?: UserJwtOptions): Promise<ISubTenantTree>;
/**
 * retrieve logged in user's available parent tenants.
 *
 * ``authorized user``
 */
export declare function getParentTenants(options?: UserJwtOptions): Promise<IParentTenant[]>;
export declare function getParentTenantsById(tenantId: string, options?: UserJwtOptions): Promise<IParentTenant[]>;
export declare function getTenantsUsersCount(body: IGetTenantsUserCountRequest, options?: UserJwtOptions): Promise<IGetTenantsUserCountResponse[]>;
export declare function searchSubTenants(params: SearchSubTenantsParams, options?: UserJwtOptions): Promise<FronteggPaginationWrapper<SearchSubTenantsResponse>>;
export declare function getHierarchyMetadata(params: GetHierarchyMetadataParams, options?: UserJwtOptions): Promise<GetHierarchyMetadataResponse[]>;
